# ACW for Xamarin.Android.Arch.Core.Common
-keep class android.arch.core.util.Function
-keepclassmembers class android.arch.core.util.Function {
}

-keep class android.arch.core.internal.FastSafeIterableMap
-keepclassmembers class android.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class android.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class android.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class android.arch.core.internal.SafeIterableMap$SupportRemove
-keepclassmembers class android.arch.core.internal.SafeIterableMap$SupportRemove {
}

-keep class android.arch.core.internal.SafeIterableMap
-keepclassmembers class android.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** newest(...);
   *** put(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.Android.Arch.Core.Runtime
-keep class android.arch.core.executor.ArchTaskExecutor
-keepclassmembers class android.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class android.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class android.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class android.arch.core.executor.TaskExecutor
-keepclassmembers class android.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class android.arch.core.executor.TaskExecutor
-keepclassmembers class android.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.Common
-keep class android.arch.lifecycle.Lifecycle$Event
-keepclassmembers class android.arch.lifecycle.Lifecycle$Event {
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle$State
-keepclassmembers class android.arch.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.CompositeGeneratedAdaptersObserver
-keepclassmembers class android.arch.lifecycle.CompositeGeneratedAdaptersObserver {
   *** onStateChanged(...);
}

-keep class android.arch.lifecycle.GeneratedAdapter
-keepclassmembers class android.arch.lifecycle.GeneratedAdapter {
}

-keep class android.arch.lifecycle.GenericLifecycleObserver
-keepclassmembers class android.arch.lifecycle.GenericLifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleObserver
-keepclassmembers class android.arch.lifecycle.LifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleOwner
-keepclassmembers class android.arch.lifecycle.LifecycleOwner {
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.Lifecycling
-keepclassmembers class android.arch.lifecycle.Lifecycling {
   <init>(...);
   *** getAdapterName(...);
}

-keep class android.arch.lifecycle.MethodCallsLogger
-keepclassmembers class android.arch.lifecycle.MethodCallsLogger {
   <init>(...);
   *** approveCall(...);
}

-keep class android.arch.lifecycle.SingleGeneratedAdapterObserver
-keepclassmembers class android.arch.lifecycle.SingleGeneratedAdapterObserver {
   *** onStateChanged(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData.Core
-keep class android.arch.lifecycle.Observer
-keepclassmembers class android.arch.lifecycle.Observer {
}

-keep class android.arch.lifecycle.LiveData$LifecycleBoundObserver
-keepclassmembers class android.arch.lifecycle.LiveData$LifecycleBoundObserver {
   *** onStateChanged(...);
}

-keep class android.arch.lifecycle.LiveData$ObserverWrapper
-keepclassmembers class android.arch.lifecycle.LiveData$ObserverWrapper {
}

-keep class android.arch.lifecycle.LiveData$ObserverWrapper
-keepclassmembers class android.arch.lifecycle.LiveData$ObserverWrapper {
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
}

-keep class android.arch.lifecycle.MutableLiveData
-keepclassmembers class android.arch.lifecycle.MutableLiveData {
   <init>(...);
   *** postValue(...);
   *** setValue(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData
-keep class android.arch.lifecycle.ComputableLiveData
-keepclassmembers class android.arch.lifecycle.ComputableLiveData {
   <init>(...);
   <init>(...);
   *** getLiveData(...);
   *** compute(...);
   *** invalidate(...);
}

-keep class android.arch.lifecycle.ComputableLiveData
-keepclassmembers class android.arch.lifecycle.ComputableLiveData {
   *** compute(...);
}

-keep class android.arch.lifecycle.MediatorLiveData
-keepclassmembers class android.arch.lifecycle.MediatorLiveData {
   <init>(...);
   *** addSource(...);
   *** removeSource(...);
}

-keep class android.arch.lifecycle.Transformations
-keepclassmembers class android.arch.lifecycle.Transformations {
   *** map(...);
   *** switchMap(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.Runtime
-keep class android.arch.lifecycle.LifecycleRegistry$ObserverWithState
-keepclassmembers class android.arch.lifecycle.LifecycleRegistry$ObserverWithState {
}

-keep class android.arch.lifecycle.LifecycleRegistry
-keepclassmembers class android.arch.lifecycle.LifecycleRegistry {
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.ReportFragment
-keepclassmembers class android.arch.lifecycle.ReportFragment {
   <init>(...);
   *** injectIfNeededIn(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.ViewModel
-keep class android.arch.lifecycle.AndroidViewModel
-keepclassmembers class android.arch.lifecycle.AndroidViewModel {
   <init>(...);
   *** getApplication(...);
}

-keep class android.arch.lifecycle.ViewModelStoreOwner
-keepclassmembers class android.arch.lifecycle.ViewModelStoreOwner {
}

-keep class android.arch.lifecycle.ViewModel
-keepclassmembers class android.arch.lifecycle.ViewModel {
   <init>(...);
   *** onCleared(...);
}

-keep class android.arch.lifecycle.ViewModel
-keepclassmembers class android.arch.lifecycle.ViewModel {
}

-keep class android.arch.lifecycle.ViewModelProvider$AndroidViewModelFactory
-keepclassmembers class android.arch.lifecycle.ViewModelProvider$AndroidViewModelFactory {
   <init>(...);
   *** getInstance(...);
}

-keep class android.arch.lifecycle.ViewModelProvider$Factory
-keepclassmembers class android.arch.lifecycle.ViewModelProvider$Factory {
}

-keep class android.arch.lifecycle.ViewModelProvider$NewInstanceFactory
-keepclassmembers class android.arch.lifecycle.ViewModelProvider$NewInstanceFactory {
   <init>(...);
   *** create(...);
}

-keep class android.arch.lifecycle.ViewModelProvider
-keepclassmembers class android.arch.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class android.arch.lifecycle.ViewModelStore
-keepclassmembers class android.arch.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.Android.Support.Annotations
-keep class android.support.annotation.AnimRes
-keepclassmembers class android.support.annotation.AnimRes {
}

-keep class android.support.annotation.AnimatorRes
-keepclassmembers class android.support.annotation.AnimatorRes {
}

-keep class android.support.annotation.AnyRes
-keepclassmembers class android.support.annotation.AnyRes {
}

-keep class android.support.annotation.AnyThread
-keepclassmembers class android.support.annotation.AnyThread {
}

-keep class android.support.annotation.ArrayRes
-keepclassmembers class android.support.annotation.ArrayRes {
}

-keep class android.support.annotation.AttrRes
-keepclassmembers class android.support.annotation.AttrRes {
}

-keep class android.support.annotation.BinderThread
-keepclassmembers class android.support.annotation.BinderThread {
}

-keep class android.support.annotation.BoolRes
-keepclassmembers class android.support.annotation.BoolRes {
}

-keep class android.support.annotation.CallSuper
-keepclassmembers class android.support.annotation.CallSuper {
}

-keep class android.support.annotation.CheckResult
-keepclassmembers class android.support.annotation.CheckResult {
}

-keep class android.support.annotation.ColorInt
-keepclassmembers class android.support.annotation.ColorInt {
}

-keep class android.support.annotation.ColorLong
-keepclassmembers class android.support.annotation.ColorLong {
}

-keep class android.support.annotation.ColorRes
-keepclassmembers class android.support.annotation.ColorRes {
}

-keep class android.support.annotation.DimenRes
-keepclassmembers class android.support.annotation.DimenRes {
}

-keep class android.support.annotation.Dimension
-keepclassmembers class android.support.annotation.Dimension {
}

-keep class android.support.annotation.Dimension
-keepclassmembers class android.support.annotation.Dimension {
}

-keep class android.support.annotation.Dimension
-keepclassmembers class android.support.annotation.Dimension {
}

-keep class android.support.annotation.DrawableRes
-keepclassmembers class android.support.annotation.DrawableRes {
}

-keep class android.support.annotation.FloatRange
-keepclassmembers class android.support.annotation.FloatRange {
}

-keep class android.support.annotation.FontRes
-keepclassmembers class android.support.annotation.FontRes {
}

-keep class android.support.annotation.FractionRes
-keepclassmembers class android.support.annotation.FractionRes {
}

-keep class android.support.annotation.GuardedBy
-keepclassmembers class android.support.annotation.GuardedBy {
}

-keep class android.support.annotation.HalfFloat
-keepclassmembers class android.support.annotation.HalfFloat {
}

-keep class android.support.annotation.IdRes
-keepclassmembers class android.support.annotation.IdRes {
}

-keep class android.support.annotation.IntDef
-keepclassmembers class android.support.annotation.IntDef {
}

-keep class android.support.annotation.IntRange
-keepclassmembers class android.support.annotation.IntRange {
}

-keep class android.support.annotation.IntegerRes
-keepclassmembers class android.support.annotation.IntegerRes {
}

-keep class android.support.annotation.InterpolatorRes
-keepclassmembers class android.support.annotation.InterpolatorRes {
}

-keep class android.support.annotation.Keep
-keepclassmembers class android.support.annotation.Keep {
}

-keep class android.support.annotation.LayoutRes
-keepclassmembers class android.support.annotation.LayoutRes {
}

-keep class android.support.annotation.LongDef
-keepclassmembers class android.support.annotation.LongDef {
}

-keep class android.support.annotation.MainThread
-keepclassmembers class android.support.annotation.MainThread {
}

-keep class android.support.annotation.MenuRes
-keepclassmembers class android.support.annotation.MenuRes {
}

-keep class android.support.annotation.NavigationRes
-keepclassmembers class android.support.annotation.NavigationRes {
}

-keep class android.support.annotation.NonNull
-keepclassmembers class android.support.annotation.NonNull {
}

-keep class android.support.annotation.Nullable
-keepclassmembers class android.support.annotation.Nullable {
}

-keep class android.support.annotation.PluralsRes
-keepclassmembers class android.support.annotation.PluralsRes {
}

-keep class android.support.annotation.Px
-keepclassmembers class android.support.annotation.Px {
}

-keep class android.support.annotation.RawRes
-keepclassmembers class android.support.annotation.RawRes {
}

-keep class android.support.annotation.RequiresApi
-keepclassmembers class android.support.annotation.RequiresApi {
}

-keep class android.support.annotation.RequiresFeature
-keepclassmembers class android.support.annotation.RequiresFeature {
}

-keep class android.support.annotation.RequiresPermission$Read
-keepclassmembers class android.support.annotation.RequiresPermission$Read {
}

-keep class android.support.annotation.RequiresPermission$Write
-keepclassmembers class android.support.annotation.RequiresPermission$Write {
}

-keep class android.support.annotation.RequiresPermission
-keepclassmembers class android.support.annotation.RequiresPermission {
}

-keep class android.support.annotation.RestrictTo$Scope
-keepclassmembers class android.support.annotation.RestrictTo$Scope {
   *** valueOf(...);
   *** values(...);
}

-keep class android.support.annotation.RestrictTo
-keepclassmembers class android.support.annotation.RestrictTo {
}

-keep class android.support.annotation.Size
-keepclassmembers class android.support.annotation.Size {
}

-keep class android.support.annotation.StringDef
-keepclassmembers class android.support.annotation.StringDef {
}

-keep class android.support.annotation.StringRes
-keepclassmembers class android.support.annotation.StringRes {
}

-keep class android.support.annotation.StyleRes
-keepclassmembers class android.support.annotation.StyleRes {
}

-keep class android.support.annotation.StyleableRes
-keepclassmembers class android.support.annotation.StyleableRes {
}

-keep class android.support.annotation.TransitionRes
-keepclassmembers class android.support.annotation.TransitionRes {
}

-keep class android.support.annotation.UiThread
-keepclassmembers class android.support.annotation.UiThread {
}

-keep class android.support.annotation.VisibleForTesting
-keepclassmembers class android.support.annotation.VisibleForTesting {
}

-keep class android.support.annotation.VisibleForTesting
-keepclassmembers class android.support.annotation.VisibleForTesting {
}

-keep class android.support.annotation.VisibleForTesting
-keepclassmembers class android.support.annotation.VisibleForTesting {
}

-keep class android.support.annotation.WorkerThread
-keepclassmembers class android.support.annotation.WorkerThread {
}

-keep class android.support.annotation.XmlRes
-keepclassmembers class android.support.annotation.XmlRes {
}

# ACW for Xamarin.Android.Support.AsyncLayoutInflater
-keep class android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener
-keepclassmembers class android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener {
}

-keep class mono.android.support.v4.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor
-keepclassmembers class mono.android.support.v4.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor {
}

-keep class android.support.v4.view.AsyncLayoutInflater
-keepclassmembers class android.support.v4.view.AsyncLayoutInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.Android.Support.Collections
-keep class android.support.v4.util.ArrayMap
-keepclassmembers class android.support.v4.util.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class android.support.v4.util.ArraySet
-keepclassmembers class android.support.v4.util.ArraySet {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** append(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** ensureCapacity(...);
   *** indexOf(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAt(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.CircularArray
-keepclassmembers class android.support.v4.util.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class android.support.v4.util.CircularIntArray
-keepclassmembers class android.support.v4.util.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class android.support.v4.util.LongSparseArray
-keepclassmembers class android.support.v4.util.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.LruCache
-keepclassmembers class android.support.v4.util.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class android.support.v4.util.SimpleArrayMap
-keepclassmembers class android.support.v4.util.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class android.support.v4.util.SparseArrayCompat
-keepclassmembers class android.support.v4.util.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.Android.Support.Compat
-keep class androidx.core.graphics.drawable.IconCompatParcelizer
-keepclassmembers class androidx.core.graphics.drawable.IconCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v13.view.DragAndDropPermissionsCompat
-keepclassmembers class android.support.v13.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class android.support.v13.view.DragStartHelper$OnDragStartListener
-keepclassmembers class android.support.v13.view.DragStartHelper$OnDragStartListener {
}

-keep class mono.android.support.v13.view.DragStartHelper_OnDragStartListenerImplementor
-keepclassmembers class mono.android.support.v13.view.DragStartHelper_OnDragStartListenerImplementor {
}

-keep class android.support.v13.view.DragStartHelper
-keepclassmembers class android.support.v13.view.DragStartHelper {
   <init>(...);
   *** attach(...);
   *** detach(...);
   *** getTouchPosition(...);
   *** onLongClick(...);
   *** onTouch(...);
}

-keep class android.support.v13.view.inputmethod.EditorInfoCompat
-keepclassmembers class android.support.v13.view.inputmethod.EditorInfoCompat {
   <init>(...);
   *** getContentMimeTypes(...);
   *** setContentMimeTypes(...);
}

-keep class android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener
-keepclassmembers class android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener {
}

-keep class mono.android.support.v13.view.inputmethod.InputConnectionCompat_OnCommitContentListenerImplementor
-keepclassmembers class mono.android.support.v13.view.inputmethod.InputConnectionCompat_OnCommitContentListenerImplementor {
}

-keep class android.support.v13.view.inputmethod.InputConnectionCompat
-keepclassmembers class android.support.v13.view.inputmethod.InputConnectionCompat {
   <init>(...);
   *** commitContent(...);
   *** createWrapper(...);
}

-keep class android.support.v13.view.inputmethod.InputContentInfoCompat
-keepclassmembers class android.support.v13.view.inputmethod.InputContentInfoCompat {
   <init>(...);
   *** getContentUri(...);
   *** getDescription(...);
   *** getLinkUri(...);
   *** releasePermission(...);
   *** requestPermission(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.widget.AutoScrollHelper
-keepclassmembers class android.support.v4.widget.AutoScrollHelper {
   <init>(...);
   *** isEnabled(...);
   *** isExclusive(...);
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** onTouch(...);
   *** scrollTargetBy(...);
   *** setActivationDelay(...);
   *** setEdgeType(...);
   *** setEnabled(...);
   *** setExclusive(...);
   *** setMaximumEdges(...);
   *** setMaximumVelocity(...);
   *** setMinimumVelocity(...);
   *** setRampDownDuration(...);
   *** setRampUpDuration(...);
   *** setRelativeEdges(...);
   *** setRelativeVelocity(...);
}

-keep class android.support.v4.widget.AutoScrollHelper
-keepclassmembers class android.support.v4.widget.AutoScrollHelper {
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** scrollTargetBy(...);
}

-keep class android.support.v4.widget.CompoundButtonCompat
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class android.support.v4.widget.ContentLoadingProgressBar
-keepclassmembers class android.support.v4.widget.ContentLoadingProgressBar {
   <init>(...);
   <init>(...);
   *** hide(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** show(...);
}

-keep class android.support.v4.widget.EdgeEffectCompat
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat {
   <init>(...);
   *** isFinished(...);
   *** draw(...);
   *** finish(...);
   *** onAbsorb(...);
   *** onPull(...);
   *** onPull(...);
   *** onPull(...);
   *** onRelease(...);
   *** setSize(...);
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.TintableCompoundButton
-keepclassmembers class android.support.v4.widget.TintableCompoundButton {
}

-keep class android.support.v4.widget.TintableImageSourceView
-keepclassmembers class android.support.v4.widget.TintableImageSourceView {
}

-keep class android.support.v4.widget.ImageViewCompat
-keepclassmembers class android.support.v4.widget.ImageViewCompat {
   *** getImageTintList(...);
   *** getImageTintMode(...);
   *** setImageTintList(...);
   *** setImageTintMode(...);
}

-keep class android.support.v4.widget.ListPopupWindowCompat
-keepclassmembers class android.support.v4.widget.ListPopupWindowCompat {
   *** createDragToOpenListener(...);
   *** createDragToOpenListener(...);
}

-keep class android.support.v4.widget.ListViewAutoScrollHelper
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper {
   <init>(...);
   *** canTargetScrollHorizontally(...);
   *** canTargetScrollVertically(...);
   *** scrollTargetBy(...);
}

-keep class android.support.v4.widget.ListViewCompat
-keepclassmembers class android.support.v4.widget.ListViewCompat {
   *** canScrollList(...);
   *** scrollListBy(...);
}

-keep class android.support.v4.widget.NestedScrollView$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate {
}

-keep class android.support.v4.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class android.support.v4.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class android.support.v4.widget.NestedScrollView$SavedState
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState {
}

-keep class android.support.v4.widget.NestedScrollView
-keepclassmembers class android.support.v4.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.widget.PopupMenuCompat
-keepclassmembers class android.support.v4.widget.PopupMenuCompat {
   *** getDragToOpenListener(...);
}

-keep class android.support.v4.widget.PopupWindowCompat
-keepclassmembers class android.support.v4.widget.PopupWindowCompat {
   *** getOverlapAnchor(...);
   *** getWindowLayoutType(...);
   *** setOverlapAnchor(...);
   *** setWindowLayoutType(...);
   *** showAsDropDown(...);
}

-keep class android.support.v4.widget.ScrollerCompat
-keepclassmembers class android.support.v4.widget.ScrollerCompat {
   *** getCurrVelocity(...);
   *** getCurrX(...);
   *** getCurrY(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** isFinished(...);
   *** isOverScrolled(...);
   *** abortAnimation(...);
   *** computeScrollOffset(...);
   *** create(...);
   *** create(...);
   *** fling(...);
   *** fling(...);
   *** notifyHorizontalEdgeReached(...);
   *** notifyVerticalEdgeReached(...);
   *** springBack(...);
   *** startScroll(...);
   *** startScroll(...);
}

-keep class android.support.v4.widget.TextViewCompat$AutoSizeTextType
-keepclassmembers class android.support.v4.widget.TextViewCompat$AutoSizeTextType {
}

-keep class android.support.v4.widget.TextViewCompat
-keepclassmembers class android.support.v4.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class android.support.v4.view.AccessibilityDelegateCompat
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat {
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.DisplayCutoutCompat
-keepclassmembers class android.support.v4.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl
-keepclassmembers class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl {
}

-keep class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase
-keepclassmembers class android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase {
   *** isLongpressEnabled(...);
   *** setIsLongpressEnabled(...);
   *** onTouchEvent(...);
   *** setOnDoubleTapListener(...);
}

-keep class android.support.v4.view.GestureDetectorCompat
-keepclassmembers class android.support.v4.view.GestureDetectorCompat {
   <init>(...);
   <init>(...);
   *** isLongpressEnabled(...);
   *** setIsLongpressEnabled(...);
   *** onTouchEvent(...);
   *** setOnDoubleTapListener(...);
}

-keep class android.support.v4.view.GravityCompat
-keepclassmembers class android.support.v4.view.GravityCompat {
   *** apply(...);
   *** apply(...);
   *** applyDisplay(...);
   *** getAbsoluteGravity(...);
}

-keep class android.support.v4.view.LayoutInflaterFactory
-keepclassmembers class android.support.v4.view.LayoutInflaterFactory {
}

-keep class android.support.v4.view.NestedScrollingChild
-keepclassmembers class android.support.v4.view.NestedScrollingChild {
}

-keep class android.support.v4.view.NestedScrollingChild2
-keepclassmembers class android.support.v4.view.NestedScrollingChild2 {
}

-keep class android.support.v4.view.NestedScrollingParent
-keepclassmembers class android.support.v4.view.NestedScrollingParent {
}

-keep class android.support.v4.view.NestedScrollingParent2
-keepclassmembers class android.support.v4.view.NestedScrollingParent2 {
}

-keep class android.support.v4.view.OnApplyWindowInsetsListener
-keepclassmembers class android.support.v4.view.OnApplyWindowInsetsListener {
}

-keep class mono.android.support.v4.view.OnApplyWindowInsetsListenerImplementor
-keepclassmembers class mono.android.support.v4.view.OnApplyWindowInsetsListenerImplementor {
}

-keep class android.support.v4.view.ScrollingView
-keepclassmembers class android.support.v4.view.ScrollingView {
}

-keep class android.support.v4.view.TintableBackgroundView
-keepclassmembers class android.support.v4.view.TintableBackgroundView {
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class mono.android.support.v4.view.ViewPropertyAnimatorListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPropertyAnimatorListenerImplementor {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class mono.android.support.v4.view.ViewPropertyAnimatorUpdateListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPropertyAnimatorUpdateListenerImplementor {
}

-keep class android.support.v4.view.InputDeviceCompat
-keepclassmembers class android.support.v4.view.InputDeviceCompat {
}

-keep class android.support.v4.view.KeyEventDispatcher$Component
-keepclassmembers class android.support.v4.view.KeyEventDispatcher$Component {
}

-keep class android.support.v4.view.KeyEventDispatcher
-keepclassmembers class android.support.v4.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class android.support.v4.view.LayoutInflaterCompat$Factory2Wrapper
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$Factory2Wrapper {
   *** onCreateView(...);
   *** onCreateView(...);
}

-keep class android.support.v4.view.LayoutInflaterCompat
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat {
   *** getFactory(...);
   *** setFactory(...);
   *** setFactory2(...);
}

-keep class android.support.v4.view.MarginLayoutParamsCompat
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat {
   *** getLayoutDirection(...);
   *** getMarginEnd(...);
   *** getMarginStart(...);
   *** isMarginRelative(...);
   *** resolveLayoutDirection(...);
   *** setLayoutDirection(...);
   *** setMarginEnd(...);
   *** setMarginStart(...);
}

-keep class android.support.v4.view.MenuCompat
-keepclassmembers class android.support.v4.view.MenuCompat {
   *** setGroupDividerEnabled(...);
   *** setShowAsAction(...);
}

-keep class android.support.v4.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class android.support.v4.view.MenuItemCompat$OnActionExpandListener {
}

-keep class mono.android.support.v4.view.MenuItemCompat_OnActionExpandListenerImplementor
-keepclassmembers class mono.android.support.v4.view.MenuItemCompat_OnActionExpandListenerImplementor {
}

-keep class android.support.v4.view.MenuItemCompat
-keepclassmembers class android.support.v4.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class android.support.v4.view.MotionEventCompat
-keepclassmembers class android.support.v4.view.MotionEventCompat {
   *** findPointerIndex(...);
   *** getActionIndex(...);
   *** getActionMasked(...);
   *** getAxisValue(...);
   *** getAxisValue(...);
   *** getButtonState(...);
   *** getPointerCount(...);
   *** getPointerId(...);
   *** getSource(...);
   *** getX(...);
   *** getY(...);
   *** isFromSource(...);
}

-keep class android.support.v4.view.NestedScrollingChildHelper
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper {
   <init>(...);
   *** hasNestedScrollingParent(...);
   *** isNestedScrollingEnabled(...);
   *** setNestedScrollingEnabled(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onDetachedFromWindow(...);
   *** onStopNestedScroll(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.view.NestedScrollingParentHelper
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper {
   <init>(...);
   *** getNestedScrollAxes(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
}

-keep class android.support.v4.view.PointerIconCompat
-keepclassmembers class android.support.v4.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class android.support.v4.view.ScaleGestureDetectorCompat
-keepclassmembers class android.support.v4.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class android.support.v4.view.VelocityTrackerCompat
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat {
   *** getXVelocity(...);
   *** getYVelocity(...);
}

-keep class android.support.v4.view.ViewCompat$FocusDirection
-keepclassmembers class android.support.v4.view.ViewCompat$FocusDirection {
}

-keep class android.support.v4.view.ViewCompat$FocusRealDirection
-keepclassmembers class android.support.v4.view.ViewCompat$FocusRealDirection {
}

-keep class android.support.v4.view.ViewCompat$FocusRelativeDirection
-keepclassmembers class android.support.v4.view.ViewCompat$FocusRelativeDirection {
}

-keep class android.support.v4.view.ViewCompat$NestedScrollType
-keepclassmembers class android.support.v4.view.ViewCompat$NestedScrollType {
}

-keep class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class android.support.v4.view.ViewCompat$ScrollAxis
-keepclassmembers class android.support.v4.view.ViewCompat$ScrollAxis {
}

-keep class android.support.v4.view.ViewCompat$ScrollIndicators
-keepclassmembers class android.support.v4.view.ViewCompat$ScrollIndicators {
}

-keep class android.support.v4.view.ViewCompat$UnhandledKeyEventManager
-keepclassmembers class android.support.v4.view.ViewCompat$UnhandledKeyEventManager {
}

-keep class android.support.v4.view.ViewCompat
-keepclassmembers class android.support.v4.view.ViewCompat {
   <init>(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** generateViewId(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityLiveRegion(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class android.support.v4.view.ViewConfigurationCompat
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat {
   *** getScaledHorizontalScrollFactor(...);
   *** getScaledHoverSlop(...);
   *** getScaledPagingTouchSlop(...);
   *** getScaledVerticalScrollFactor(...);
   *** hasPermanentMenuKey(...);
   *** shouldShowMenuShortcutsWhenKeyboardPresent(...);
}

-keep class android.support.v4.view.ViewGroupCompat
-keepclassmembers class android.support.v4.view.ViewGroupCompat {
   *** getLayoutMode(...);
   *** getNestedScrollAxes(...);
   *** isTransitionGroup(...);
   *** onRequestSendAccessibilityEvent(...);
   *** setLayoutMode(...);
   *** setMotionEventSplittingEnabled(...);
   *** setTransitionGroup(...);
}

-keep class android.support.v4.view.ViewParentCompat
-keepclassmembers class android.support.v4.view.ViewParentCompat {
   *** notifySubtreeAccessibilityStateChanged(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** requestSendAccessibilityEvent(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 {
   *** onAnimationCancel(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorListenerAdapter
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListenerAdapter {
   <init>(...);
   *** onAnimationCancel(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class android.support.v4.view.WindowCompat
-keepclassmembers class android.support.v4.view.WindowCompat {
   *** requireViewById(...);
}

-keep class android.support.v4.view.WindowInsetsCompat
-keepclassmembers class android.support.v4.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class android.support.v4.view.animation.PathInterpolatorCompat
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorCompat {
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityEventCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat {
   *** appendRecord(...);
   *** asRecord(...);
   *** getAction(...);
   *** getContentChangeTypes(...);
   *** getMovementGranularity(...);
   *** getRecord(...);
   *** getRecordCount(...);
   *** setAction(...);
   *** setContentChangeTypes(...);
   *** setMovementGranularity(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener {
}

-keep class mono.android.support.v4.view.accessibility.AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.accessibility.AccessibilityManagerCompat_AccessibilityStateChangeListenerImplementor {
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat {
   <init>(...);
   *** onAccessibilityStateChanged(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat {
   *** onAccessibilityStateChanged(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener {
}

-keep class mono.android.support.v4.view.accessibility.AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.accessibility.AccessibilityManagerCompat_TouchExplorationStateChangeListenerImplementor {
}

-keep class android.support.v4.view.accessibility.AccessibilityManagerCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityManagerCompat {
   *** addAccessibilityStateChangeListener(...);
   *** addTouchExplorationStateChangeListener(...);
   *** getEnabledAccessibilityServiceList(...);
   *** getInstalledAccessibilityServiceList(...);
   *** isTouchExplorationEnabled(...);
   *** removeAccessibilityStateChangeListener(...);
   *** removeTouchExplorationStateChangeListener(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityRecordCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat {
   <init>(...);
   *** getAddedCount(...);
   *** setAddedCount(...);
   *** getBeforeText(...);
   *** setBeforeText(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getClassName(...);
   *** setClassName(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** getCurrentItemIndex(...);
   *** setCurrentItemIndex(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getFromIndex(...);
   *** setFromIndex(...);
   *** isFullScreen(...);
   *** setFullScreen(...);
   *** getImpl(...);
   *** getItemCount(...);
   *** setItemCount(...);
   *** getMaxScrollX(...);
   *** setMaxScrollX(...);
   *** getMaxScrollY(...);
   *** setMaxScrollY(...);
   *** getParcelableData(...);
   *** setParcelableData(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRemovedCount(...);
   *** setRemovedCount(...);
   *** getScrollX(...);
   *** setScrollX(...);
   *** getScrollY(...);
   *** setScrollY(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** getSource(...);
   *** getText(...);
   *** getToIndex(...);
   *** setToIndex(...);
   *** getWindowId(...);
   *** getMaxScrollX(...);
   *** getMaxScrollY(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** setMaxScrollX(...);
   *** setMaxScrollY(...);
   *** setSource(...);
   *** setSource(...);
   *** setSource(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class android.support.v4.util.AtomicFile
-keepclassmembers class android.support.v4.util.AtomicFile {
   <init>(...);
   *** getBaseFile(...);
   *** delete(...);
   *** failWrite(...);
   *** finishWrite(...);
   *** openRead(...);
   *** readFully(...);
   *** startWrite(...);
}

-keep class android.support.v4.util.DebugUtils
-keepclassmembers class android.support.v4.util.DebugUtils {
   *** buildShortClassTag(...);
}

-keep class android.support.v4.util.Consumer
-keepclassmembers class android.support.v4.util.Consumer {
}

-keep class android.support.v4.util.LogWriter
-keepclassmembers class android.support.v4.util.LogWriter {
   <init>(...);
   *** close(...);
   *** flush(...);
   *** write(...);
}

-keep class android.support.v4.util.ObjectsCompat
-keepclassmembers class android.support.v4.util.ObjectsCompat {
   *** equals(...);
   *** hash(...);
   *** hashCode(...);
}

-keep class android.support.v4.util.Pair
-keepclassmembers class android.support.v4.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class android.support.v4.util.PatternsCompat
-keepclassmembers class android.support.v4.util.PatternsCompat {
}

-keep class android.support.v4.util.Pools$Pool
-keepclassmembers class android.support.v4.util.Pools$Pool {
}

-keep class android.support.v4.util.Pools$SimplePool
-keepclassmembers class android.support.v4.util.Pools$SimplePool {
   <init>(...);
   *** acquire(...);
   *** release(...);
}

-keep class android.support.v4.util.Pools$SynchronizedPool
-keepclassmembers class android.support.v4.util.Pools$SynchronizedPool {
   <init>(...);
}

-keep class android.support.v4.util.Pools
-keepclassmembers class android.support.v4.util.Pools {
}

-keep class android.support.v4.util.Preconditions
-keepclassmembers class android.support.v4.util.Preconditions {
   *** checkArgument(...);
   *** checkArgument(...);
   *** checkArgumentFinite(...);
   *** checkArgumentInRange(...);
   *** checkArgumentInRange(...);
   *** checkArgumentInRange(...);
   *** checkArgumentNonnegative(...);
   *** checkArgumentNonnegative(...);
   *** checkArgumentNonnegative(...);
   *** checkArgumentNonnegative(...);
   *** checkArgumentPositive(...);
   *** checkArrayElementsInRange(...);
   *** checkArrayElementsNotNull(...);
   *** checkCollectionElementsNotNull(...);
   *** checkCollectionNotEmpty(...);
   *** checkFlagsArgument(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
   *** checkState(...);
   *** checkState(...);
}

-keep class android.support.v4.util.TimeUtils
-keepclassmembers class android.support.v4.util.TimeUtils {
   *** formatDuration(...);
   *** formatDuration(...);
   *** formatDuration(...);
   *** formatDuration(...);
}

-keep class android.support.v4.provider.FontRequest
-keepclassmembers class android.support.v4.provider.FontRequest {
   <init>(...);
   <init>(...);
   *** getCertificates(...);
   *** getCertificatesArrayResId(...);
   *** getIdentifier(...);
   *** getProviderAuthority(...);
   *** getProviderPackage(...);
   *** getQuery(...);
}

-keep class android.support.v4.provider.FontsContractCompat$Columns
-keepclassmembers class android.support.v4.provider.FontsContractCompat$Columns {
   <init>(...);
}

-keep class android.support.v4.provider.FontsContractCompat$FontFamilyResult
-keepclassmembers class android.support.v4.provider.FontsContractCompat$FontFamilyResult {
   <init>(...);
   *** getStatusCode(...);
   *** getFonts(...);
}

-keep class android.support.v4.provider.FontsContractCompat$FontInfo
-keepclassmembers class android.support.v4.provider.FontsContractCompat$FontInfo {
   <init>(...);
   *** isItalic(...);
   *** getResultCode(...);
   *** getTtcIndex(...);
   *** getUri(...);
   *** getWeight(...);
}

-keep class android.support.v4.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
-keepclassmembers class android.support.v4.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason {
}

-keep class android.support.v4.provider.FontsContractCompat$FontRequestCallback
-keepclassmembers class android.support.v4.provider.FontsContractCompat$FontRequestCallback {
   <init>(...);
   *** onTypefaceRequestFailed(...);
   *** onTypefaceRetrieved(...);
}

-keep class android.support.v4.provider.FontsContractCompat
-keepclassmembers class android.support.v4.provider.FontsContractCompat {
   *** buildTypeface(...);
   *** fetchFonts(...);
   *** getFontSync(...);
   *** getProvider(...);
   *** prepareFontData(...);
   *** requestFont(...);
   *** resetCache(...);
}

-keep class android.support.v4.provider.SelfDestructiveThread$ReplyCallback
-keepclassmembers class android.support.v4.provider.SelfDestructiveThread$ReplyCallback {
}

-keep class android.support.v4.provider.SelfDestructiveThread
-keepclassmembers class android.support.v4.provider.SelfDestructiveThread {
   <init>(...);
   *** getGeneration(...);
   *** isRunning(...);
   *** postAndReply(...);
   *** postAndWait(...);
}

-keep class android.support.v4.os.BuildCompat
-keepclassmembers class android.support.v4.os.BuildCompat {
   *** isAtLeastN(...);
   *** isAtLeastNMR1(...);
   *** isAtLeastO(...);
   *** isAtLeastOMR1(...);
   *** isAtLeastP(...);
   *** isAtLeastQ(...);
}

-keep class android.support.v4.os.CancellationSignal$OnCancelListener
-keepclassmembers class android.support.v4.os.CancellationSignal$OnCancelListener {
}

-keep class mono.android.support.v4.os.CancellationSignal_OnCancelListenerImplementor
-keepclassmembers class mono.android.support.v4.os.CancellationSignal_OnCancelListenerImplementor {
}

-keep class android.support.v4.os.CancellationSignal
-keepclassmembers class android.support.v4.os.CancellationSignal {
   <init>(...);
   *** getCancellationSignalObject(...);
   *** isCanceled(...);
   *** cancel(...);
   *** setOnCancelListener(...);
   *** throwIfCanceled(...);
}

-keep class android.support.v4.os.ConfigurationCompat
-keepclassmembers class android.support.v4.os.ConfigurationCompat {
   *** getLocales(...);
}

-keep class android.support.v4.os.EnvironmentCompat
-keepclassmembers class android.support.v4.os.EnvironmentCompat {
   *** getStorageState(...);
}

-keep class android.support.v4.os.HandlerCompat
-keepclassmembers class android.support.v4.os.HandlerCompat {
   *** postDelayed(...);
}

-keep class android.support.v4.os.ParcelableCompatCreatorCallbacks
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorCallbacks {
}

-keep class android.support.v4.os.IResultReceiver$Stub
-keepclassmembers class android.support.v4.os.IResultReceiver$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** send(...);
}

-keep class android.support.v4.os.IResultReceiver$Stub
-keepclassmembers class android.support.v4.os.IResultReceiver$Stub {
   *** send(...);
}

-keep class android.support.v4.os.IResultReceiver
-keepclassmembers class android.support.v4.os.IResultReceiver {
}

-keep class android.support.v4.os.LocaleListCompat
-keepclassmembers class android.support.v4.os.LocaleListCompat {
   *** getAdjustedDefault(...);
   *** getDefault(...);
   *** getEmptyLocaleList(...);
   *** isEmpty(...);
   *** create(...);
   *** forLanguageTags(...);
   *** get(...);
   *** getFirstMatch(...);
   *** indexOf(...);
   *** size(...);
   *** toLanguageTags(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.os.OperationCanceledException
-keepclassmembers class android.support.v4.os.OperationCanceledException {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.os.ParcelCompat
-keepclassmembers class android.support.v4.os.ParcelCompat {
   *** readBoolean(...);
   *** writeBoolean(...);
}

-keep class android.support.v4.os.ParcelableCompat
-keepclassmembers class android.support.v4.os.ParcelableCompat {
   *** newCreator(...);
}

-keep class android.support.v4.os.ResultReceiver$MyResultReceiver
-keepclassmembers class android.support.v4.os.ResultReceiver$MyResultReceiver {
   *** send(...);
}

-keep class android.support.v4.os.ResultReceiver$MyRunnable
-keepclassmembers class android.support.v4.os.ResultReceiver$MyRunnable {
   *** run(...);
}

-keep class android.support.v4.os.ResultReceiver
-keepclassmembers class android.support.v4.os.ResultReceiver {
   <init>(...);
   *** describeContents(...);
   *** onReceiveResult(...);
   *** send(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.os.TraceCompat
-keepclassmembers class android.support.v4.os.TraceCompat {
   *** beginSection(...);
   *** endSection(...);
}

-keep class android.support.v4.os.UserManagerCompat
-keepclassmembers class android.support.v4.os.UserManagerCompat {
   *** isUserUnlocked(...);
}

-keep class android.support.v4.net.ConnectivityManagerCompat$RestrictBackgroundStatus
-keepclassmembers class android.support.v4.net.ConnectivityManagerCompat$RestrictBackgroundStatus {
}

-keep class android.support.v4.net.ConnectivityManagerCompat
-keepclassmembers class android.support.v4.net.ConnectivityManagerCompat {
   *** getNetworkInfoFromBroadcast(...);
   *** getRestrictBackgroundStatus(...);
   *** isActiveNetworkMetered(...);
}

-keep class android.support.v4.net.TrafficStatsCompat
-keepclassmembers class android.support.v4.net.TrafficStatsCompat {
   *** getThreadStatsTag(...);
   *** setThreadStatsTag(...);
   *** clearThreadStatsTag(...);
   *** incrementOperationCount(...);
   *** incrementOperationCount(...);
   *** tagDatagramSocket(...);
   *** tagSocket(...);
   *** untagDatagramSocket(...);
   *** untagSocket(...);
}

-keep class android.support.v4.math.MathUtils
-keepclassmembers class android.support.v4.math.MathUtils {
   *** clamp(...);
   *** clamp(...);
   *** clamp(...);
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.internal.view.SupportSubMenu
-keepclassmembers class android.support.v4.internal.view.SupportSubMenu {
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback {
   <init>(...);
   *** onAuthenticationError(...);
   *** onAuthenticationFailed(...);
   *** onAuthenticationHelp(...);
   *** onAuthenticationSucceeded(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback {
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult {
   <init>(...);
   *** getCryptoObject(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCipher(...);
   *** getMac(...);
   *** getSignature(...);
}

-keep class android.support.v4.hardware.fingerprint.FingerprintManagerCompat
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat {
   *** hasEnrolledFingerprints(...);
   *** isHardwareDetected(...);
   *** authenticate(...);
   *** from(...);
}

-keep class android.support.v4.hardware.display.DisplayManagerCompat
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat {
   *** getDisplay(...);
   *** getDisplays(...);
   *** getDisplays(...);
   *** getInstance(...);
}

-keep class android.support.v4.graphics.BitmapCompat
-keepclassmembers class android.support.v4.graphics.BitmapCompat {
   *** getAllocationByteCount(...);
   *** hasMipMap(...);
   *** setHasMipMap(...);
}

-keep class android.support.v4.graphics.ColorUtils
-keepclassmembers class android.support.v4.graphics.ColorUtils {
   *** HSLToColor(...);
   *** LABToColor(...);
   *** LABToXYZ(...);
   *** RGBToHSL(...);
   *** RGBToLAB(...);
   *** RGBToXYZ(...);
   *** XYZToColor(...);
   *** XYZToLAB(...);
   *** blendARGB(...);
   *** blendHSL(...);
   *** blendLAB(...);
   *** calculateContrast(...);
   *** calculateLuminance(...);
   *** calculateMinimumAlpha(...);
   *** colorToHSL(...);
   *** colorToLAB(...);
   *** colorToXYZ(...);
   *** compositeColors(...);
   *** compositeColors(...);
   *** distanceEuclidean(...);
   *** setAlphaComponent(...);
}

-keep class android.support.v4.graphics.PaintCompat
-keepclassmembers class android.support.v4.graphics.PaintCompat {
   *** hasGlyph(...);
}

-keep class android.support.v4.graphics.PathParser$PathDataNode
-keepclassmembers class android.support.v4.graphics.PathParser$PathDataNode {
   *** interpolatePathDataNode(...);
   *** nodesToPath(...);
}

-keep class android.support.v4.graphics.PathParser
-keepclassmembers class android.support.v4.graphics.PathParser {
   *** canMorph(...);
   *** createNodesFromPathData(...);
   *** createPathFromPathData(...);
   *** deepCopyNodes(...);
   *** updateNodes(...);
}

-keep class android.support.v4.graphics.PathSegment
-keepclassmembers class android.support.v4.graphics.PathSegment {
   <init>(...);
   *** getEnd(...);
   *** getEndFraction(...);
   *** getStart(...);
   *** getStartFraction(...);
}

-keep class android.support.v4.graphics.PathUtils
-keepclassmembers class android.support.v4.graphics.PathUtils {
   *** flatten(...);
   *** flatten(...);
}

-keep class android.support.v4.graphics.TypefaceCompat
-keepclassmembers class android.support.v4.graphics.TypefaceCompat {
   *** createFromFontInfo(...);
   *** createFromResourcesFamilyXml(...);
   *** createFromResourcesFontFile(...);
   *** findFromCache(...);
}

-keep class android.support.v4.graphics.TypefaceCompatUtil
-keepclassmembers class android.support.v4.graphics.TypefaceCompatUtil {
   *** closeQuietly(...);
   *** copyToDirectBuffer(...);
   *** copyToFile(...);
   *** copyToFile(...);
   *** getTempFile(...);
   *** mmap(...);
}

-keep class android.support.v4.graphics.drawable.DrawableCompat
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.graphics.drawable.TintAwareDrawable
-keepclassmembers class android.support.v4.graphics.drawable.TintAwareDrawable {
}

-keep class android.support.v4.graphics.drawable.WrappedDrawable
-keepclassmembers class android.support.v4.graphics.drawable.WrappedDrawable {
}

-keep class android.support.v4.graphics.drawable.IconCompat$IconType
-keepclassmembers class android.support.v4.graphics.drawable.IconCompat$IconType {
}

-keep class android.support.v4.graphics.drawable.IconCompat
-keepclassmembers class android.support.v4.graphics.drawable.IconCompat {
   <init>(...);
   *** getResId(...);
   *** getResPackage(...);
   *** getType(...);
   *** getUri(...);
   *** addToShortcutIntent(...);
   *** checkResource(...);
   *** createFromBundle(...);
   *** createFromIcon(...);
   *** createFromIcon(...);
   *** createWithAdaptiveBitmap(...);
   *** createWithBitmap(...);
   *** createWithContentUri(...);
   *** createWithContentUri(...);
   *** createWithData(...);
   *** createWithResource(...);
   *** createWithResource(...);
   *** loadDrawable(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** toBundle(...);
   *** toIcon(...);
}

-keep class android.support.v4.graphics.drawable.IconCompatParcelizer
-keepclassmembers class android.support.v4.graphics.drawable.IconCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawable
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawable {
   *** getBitmap(...);
   *** isCircular(...);
   *** setCircular(...);
   *** getCornerRadius(...);
   *** setCornerRadius(...);
   *** getGravity(...);
   *** setGravity(...);
   *** hasAntiAlias(...);
   *** hasMipMap(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** draw(...);
   *** setAlpha(...);
   *** setAntiAlias(...);
   *** setColorFilter(...);
   *** setMipMap(...);
   *** setTargetDensity(...);
   *** setTargetDensity(...);
   *** setTargetDensity(...);
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawable
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawable {
}

-keep class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory
-keepclassmembers class android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory {
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class android.support.v4.database.CursorWindowCompat
-keepclassmembers class android.support.v4.database.CursorWindowCompat {
   *** create(...);
}

-keep class android.support.v4.database.DatabaseUtilsCompat
-keepclassmembers class android.support.v4.database.DatabaseUtilsCompat {
   *** appendSelectionArgs(...);
   *** concatenateWhere(...);
}

-keep class android.support.v4.database.sqlite.SQLiteCursorCompat
-keepclassmembers class android.support.v4.database.sqlite.SQLiteCursorCompat {
   *** setFillWindowForwardOnly(...);
}

-keep class android.support.v4.content.ContentResolverCompat
-keepclassmembers class android.support.v4.content.ContentResolverCompat {
   *** query(...);
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class android.support.v4.content.FileProvider$PathStrategy
-keepclassmembers class android.support.v4.content.FileProvider$PathStrategy {
}

-keep class android.support.v4.content.FileProvider$SimplePathStrategy
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy {
   *** getFileForUri(...);
   *** getUriForFile(...);
}

-keep class android.support.v4.content.FileProvider
-keepclassmembers class android.support.v4.content.FileProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class android.support.v4.content.IntentCompat
-keepclassmembers class android.support.v4.content.IntentCompat {
   *** makeMainSelectorActivity(...);
}

-keep class android.support.v4.content.MimeTypeFilter
-keepclassmembers class android.support.v4.content.MimeTypeFilter {
   *** matches(...);
   *** matches(...);
   *** matches(...);
   *** matchesMany(...);
}

-keep class android.support.v4.content.PermissionChecker$PermissionResult
-keepclassmembers class android.support.v4.content.PermissionChecker$PermissionResult {
}

-keep class android.support.v4.content.PermissionChecker
-keepclassmembers class android.support.v4.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class android.support.v4.content.SharedPreferencesCompat$EditorCompat
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat {
   *** getInstance(...);
   *** apply(...);
}

-keep class android.support.v4.content.SharedPreferencesCompat
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat {
}

-keep class android.support.v4.content.res.ColorStateListInflaterCompat
-keepclassmembers class android.support.v4.content.res.ColorStateListInflaterCompat {
   *** createFromXml(...);
   *** createFromXmlInner(...);
}

-keep class android.support.v4.content.res.ComplexColorCompat
-keepclassmembers class android.support.v4.content.res.ComplexColorCompat {
   *** getColor(...);
   *** setColor(...);
   *** isGradient(...);
   *** isStateful(...);
   *** getShader(...);
   *** inflate(...);
   *** onStateChanged(...);
   *** willDraw(...);
}

-keep class android.support.v4.content.res.ConfigurationHelper
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper {
   *** getDensityDpi(...);
}

-keep class android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry {
}

-keep class android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy {
}

-keep class android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry {
   <init>(...);
   *** getEntries(...);
}

-keep class android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry {
   <init>(...);
   *** getFileName(...);
   *** isItalic(...);
   *** getResourceId(...);
   *** getTtcIndex(...);
   *** getVariationSettings(...);
   *** getWeight(...);
}

-keep class android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry {
   <init>(...);
   *** getFetchStrategy(...);
   *** getRequest(...);
   *** getTimeout(...);
}

-keep class android.support.v4.content.res.FontResourcesParserCompat
-keepclassmembers class android.support.v4.content.res.FontResourcesParserCompat {
   *** parse(...);
   *** readCerts(...);
}

-keep class android.support.v4.content.res.ResourcesCompat$FontCallback
-keepclassmembers class android.support.v4.content.res.ResourcesCompat$FontCallback {
   <init>(...);
   *** callbackFailAsync(...);
   *** callbackSuccessAsync(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class android.support.v4.content.res.ResourcesCompat$FontCallback
-keepclassmembers class android.support.v4.content.res.ResourcesCompat$FontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class android.support.v4.content.res.ResourcesCompat
-keepclassmembers class android.support.v4.content.res.ResourcesCompat {
   *** getColor(...);
   *** getColorStateList(...);
   *** getDrawable(...);
   *** getDrawableForDensity(...);
   *** getFont(...);
   *** getFont(...);
   *** getFont(...);
}

-keep class android.support.v4.content.res.TypedArrayUtils
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils {
   *** getAttr(...);
   *** getBoolean(...);
   *** getDrawable(...);
   *** getInt(...);
   *** getNamedBoolean(...);
   *** getNamedColor(...);
   *** getNamedComplexColor(...);
   *** getNamedFloat(...);
   *** getNamedInt(...);
   *** getNamedResourceId(...);
   *** getNamedString(...);
   *** getResourceId(...);
   *** getString(...);
   *** getText(...);
   *** getTextArray(...);
   *** hasAttribute(...);
   *** obtainAttributes(...);
   *** peekNamedValue(...);
}

-keep class android.support.v4.content.pm.ActivityInfoCompat
-keepclassmembers class android.support.v4.content.pm.ActivityInfoCompat {
}

-keep class android.support.v4.content.pm.PackageInfoCompat
-keepclassmembers class android.support.v4.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
}

-keep class android.support.v4.content.pm.PermissionInfoCompat$Protection
-keepclassmembers class android.support.v4.content.pm.PermissionInfoCompat$Protection {
}

-keep class android.support.v4.content.pm.PermissionInfoCompat$ProtectionFlags
-keepclassmembers class android.support.v4.content.pm.PermissionInfoCompat$ProtectionFlags {
}

-keep class android.support.v4.content.pm.PermissionInfoCompat
-keepclassmembers class android.support.v4.content.pm.PermissionInfoCompat {
   *** getProtection(...);
   *** getProtectionFlags(...);
}

-keep class android.support.v4.content.pm.ShortcutInfoCompat$Builder
-keepclassmembers class android.support.v4.content.pm.ShortcutInfoCompat$Builder {
   <init>(...);
   *** build(...);
   *** setActivity(...);
   *** setAlwaysBadged(...);
   *** setDisabledMessage(...);
   *** setIcon(...);
   *** setIntent(...);
   *** setIntents(...);
   *** setLongLabel(...);
   *** setShortLabel(...);
}

-keep class android.support.v4.content.pm.ShortcutInfoCompat
-keepclassmembers class android.support.v4.content.pm.ShortcutInfoCompat {
   *** getActivity(...);
   *** getDisabledMessage(...);
   *** getId(...);
   *** getIntent(...);
   *** getLongLabel(...);
   *** getShortLabel(...);
   *** getIntents(...);
   *** toShortcutInfo(...);
}

-keep class android.support.v4.content.pm.ShortcutManagerCompat
-keepclassmembers class android.support.v4.content.pm.ShortcutManagerCompat {
   *** createShortcutResultIntent(...);
   *** isRequestPinShortcutSupported(...);
   *** requestPinShortcut(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class android.support.v4.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.ActivityManagerCompat
-keepclassmembers class android.support.v4.app.ActivityManagerCompat {
   *** isLowRamDevice(...);
}

-keep class android.support.v4.app.ActivityOptionsCompat
-keepclassmembers class android.support.v4.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class android.support.v4.app.AlarmManagerCompat
-keepclassmembers class android.support.v4.app.AlarmManagerCompat {
   *** setAlarmClock(...);
   *** setAndAllowWhileIdle(...);
   *** setExact(...);
   *** setExactAndAllowWhileIdle(...);
}

-keep class android.support.v4.app.AppComponentFactory
-keepclassmembers class android.support.v4.app.AppComponentFactory {
   <init>(...);
   *** instantiateActivity(...);
   *** instantiateActivityCompat(...);
   *** instantiateApplication(...);
   *** instantiateApplicationCompat(...);
   *** instantiateProvider(...);
   *** instantiateProviderCompat(...);
   *** instantiateReceiver(...);
   *** instantiateReceiverCompat(...);
   *** instantiateService(...);
   *** instantiateServiceCompat(...);
}

-keep class android.support.v4.app.AppLaunchChecker
-keepclassmembers class android.support.v4.app.AppLaunchChecker {
   <init>(...);
   *** hasStartedFromLauncher(...);
   *** onActivityCreate(...);
}

-keep class android.support.v4.app.AppOpsManagerCompat
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat {
   *** noteOp(...);
   *** noteOpNoThrow(...);
   *** noteProxyOp(...);
   *** noteProxyOpNoThrow(...);
   *** permissionToOp(...);
}

-keep class android.support.v4.app.BundleCompat$BundleCompatBaseImpl
-keepclassmembers class android.support.v4.app.BundleCompat$BundleCompatBaseImpl {
   *** getBinder(...);
   *** putBinder(...);
}

-keep class android.support.v4.app.BundleCompat
-keepclassmembers class android.support.v4.app.BundleCompat {
   *** getBinder(...);
   *** putBinder(...);
}

-keep class android.support.v4.app.CoreComponentFactory$CompatWrapped
-keepclassmembers class android.support.v4.app.CoreComponentFactory$CompatWrapped {
}

-keep class android.support.v4.app.CoreComponentFactory
-keepclassmembers class android.support.v4.app.CoreComponentFactory {
   <init>(...);
}

-keep class android.support.v4.app.FrameMetricsAggregator$MetricType
-keepclassmembers class android.support.v4.app.FrameMetricsAggregator$MetricType {
}

-keep class android.support.v4.app.FrameMetricsAggregator
-keepclassmembers class android.support.v4.app.FrameMetricsAggregator {
   <init>(...);
   <init>(...);
   *** add(...);
   *** getMetrics(...);
   *** remove(...);
   *** reset(...);
   *** stop(...);
}

-keep class android.support.v4.app.NotificationBuilderWithBuilderAccessor
-keepclassmembers class android.support.v4.app.NotificationBuilderWithBuilderAccessor {
}

-keep class android.support.v4.app.INotificationSideChannel$Stub
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.INotificationSideChannel$Stub
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub {
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.INotificationSideChannel
-keepclassmembers class android.support.v4.app.INotificationSideChannel {
}

-keep class android.support.v4.app.JobIntentService$CompatJobEngine
-keepclassmembers class android.support.v4.app.JobIntentService$CompatJobEngine {
}

-keep class android.support.v4.app.JobIntentService$CompatWorkEnqueuer
-keepclassmembers class android.support.v4.app.JobIntentService$CompatWorkEnqueuer {
   *** serviceProcessingFinished(...);
   *** serviceProcessingStarted(...);
   *** serviceStartReceived(...);
}

-keep class android.support.v4.app.JobIntentService$CompatWorkItem
-keepclassmembers class android.support.v4.app.JobIntentService$CompatWorkItem {
   *** getIntent(...);
   *** complete(...);
}

-keep class android.support.v4.app.JobIntentService$GenericWorkItem
-keepclassmembers class android.support.v4.app.JobIntentService$GenericWorkItem {
}

-keep class android.support.v4.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
-keepclassmembers class android.support.v4.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem {
   *** getIntent(...);
   *** complete(...);
}

-keep class android.support.v4.app.JobIntentService$JobServiceEngineImpl
-keepclassmembers class android.support.v4.app.JobIntentService$JobServiceEngineImpl {
   *** compatGetBinder(...);
   *** dequeueWork(...);
   *** onStartJob(...);
   *** onStopJob(...);
}

-keep class android.support.v4.app.JobIntentService$JobWorkEnqueuer
-keepclassmembers class android.support.v4.app.JobIntentService$JobWorkEnqueuer {
}

-keep class android.support.v4.app.JobIntentService$WorkEnqueuer
-keepclassmembers class android.support.v4.app.JobIntentService$WorkEnqueuer {
   *** serviceProcessingFinished(...);
   *** serviceProcessingStarted(...);
   *** serviceStartReceived(...);
}

-keep class android.support.v4.app.JobIntentService$WorkEnqueuer
-keepclassmembers class android.support.v4.app.JobIntentService$WorkEnqueuer {
}

-keep class android.support.v4.app.JobIntentService
-keepclassmembers class android.support.v4.app.JobIntentService {
   <init>(...);
   *** isStopped(...);
   *** enqueueWork(...);
   *** enqueueWork(...);
   *** onBind(...);
   *** onHandleWork(...);
   *** onStopCurrentWork(...);
   *** setInterruptIfStopped(...);
}

-keep class android.support.v4.app.JobIntentService
-keepclassmembers class android.support.v4.app.JobIntentService {
   *** onHandleWork(...);
}

-keep class android.support.v4.app.NavUtils
-keepclassmembers class android.support.v4.app.NavUtils {
   *** getParentActivityIntent(...);
   *** getParentActivityIntent(...);
   *** getParentActivityIntent(...);
   *** getParentActivityName(...);
   *** getParentActivityName(...);
   *** navigateUpFromSameTask(...);
   *** navigateUpTo(...);
   *** shouldUpRecreateTask(...);
}

-keep class android.support.v4.app.NotificationCompat$Action$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** addExtras(...);
   *** addRemoteInput(...);
   *** build(...);
   *** extend(...);
   *** setAllowGeneratedReplies(...);
   *** setSemanticAction(...);
   *** setShowsUserInterface(...);
}

-keep class android.support.v4.app.NotificationCompat$Action$Extender
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Extender {
}

-keep class android.support.v4.app.NotificationCompat$Action$SemanticAction
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$SemanticAction {
}

-keep class android.support.v4.app.NotificationCompat$Action$WearableExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$WearableExtender {
   <init>(...);
   <init>(...);
   *** getCancelLabel(...);
   *** getConfirmLabel(...);
   *** getHintDisplayActionInline(...);
   *** getHintLaunchesActivity(...);
   *** getInProgressLabel(...);
   *** isAvailableOffline(...);
   *** clone(...);
   *** extend(...);
   *** setAvailableOffline(...);
   *** setCancelLabel(...);
   *** setConfirmLabel(...);
   *** setHintDisplayActionInline(...);
   *** setHintLaunchesActivity(...);
   *** setInProgressLabel(...);
}

-keep class android.support.v4.app.NotificationCompat$Action
-keepclassmembers class android.support.v4.app.NotificationCompat$Action {
   <init>(...);
   <init>(...);
   *** getActionIntent(...);
   *** getAllowGeneratedReplies(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getSemanticAction(...);
   *** getShowsUserInterface(...);
   *** getTitle(...);
   *** getDataOnlyRemoteInputs(...);
   *** getRemoteInputs(...);
}

-keep class android.support.v4.app.NotificationCompat$BadgeIconType
-keepclassmembers class android.support.v4.app.NotificationCompat$BadgeIconType {
}

-keep class android.support.v4.app.NotificationCompat$BigPictureStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$BigPictureStyle {
   <init>(...);
   <init>(...);
   *** bigLargeIcon(...);
   *** bigPicture(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$BigTextStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle {
   <init>(...);
   <init>(...);
   *** bigText(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder {
   <init>(...);
   <init>(...);
   *** getBigContentView(...);
   *** getColor(...);
   *** getContentView(...);
   *** getExtras(...);
   *** getHeadsUpContentView(...);
   *** getNotification(...);
   *** getPriority(...);
   *** getWhenIfShowing(...);
   *** addAction(...);
   *** addAction(...);
   *** addExtras(...);
   *** addInvisibleAction(...);
   *** addInvisibleAction(...);
   *** addPerson(...);
   *** build(...);
   *** extend(...);
   *** limitCharSequenceLength(...);
   *** setAutoCancel(...);
   *** setBadgeIconType(...);
   *** setCategory(...);
   *** setChannelId(...);
   *** setColor(...);
   *** setColorized(...);
   *** setContent(...);
   *** setContentInfo(...);
   *** setContentIntent(...);
   *** setContentText(...);
   *** setContentTitle(...);
   *** setCustomBigContentView(...);
   *** setCustomContentView(...);
   *** setCustomHeadsUpContentView(...);
   *** setDefaults(...);
   *** setDeleteIntent(...);
   *** setExtras(...);
   *** setFullScreenIntent(...);
   *** setGroup(...);
   *** setGroupAlertBehavior(...);
   *** setGroupSummary(...);
   *** setLargeIcon(...);
   *** setLights(...);
   *** setLocalOnly(...);
   *** setNumber(...);
   *** setOngoing(...);
   *** setOnlyAlertOnce(...);
   *** setPriority(...);
   *** setProgress(...);
   *** setPublicVersion(...);
   *** setRemoteInputHistory(...);
   *** setShortcutId(...);
   *** setShowWhen(...);
   *** setSmallIcon(...);
   *** setSmallIcon(...);
   *** setSortKey(...);
   *** setSound(...);
   *** setSound(...);
   *** setStyle(...);
   *** setSubText(...);
   *** setTicker(...);
   *** setTicker(...);
   *** setTimeoutAfter(...);
   *** setUsesChronometer(...);
   *** setVibrate(...);
   *** setVisibility(...);
   *** setWhen(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder {
   <init>(...);
   *** addMessage(...);
   *** build(...);
   *** setLatestTimestamp(...);
   *** setReadPendingIntent(...);
   *** setReplyAction(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation {
   *** getLatestTimestamp(...);
   *** getParticipant(...);
   *** getReadPendingIntent(...);
   *** getRemoteInput(...);
   *** getReplyPendingIntent(...);
   *** getMessages(...);
   *** getParticipants(...);
}

-keep class android.support.v4.app.NotificationCompat$CarExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$CarExtender {
   <init>(...);
   <init>(...);
   *** getColor(...);
   *** getLargeIcon(...);
   *** extend(...);
   *** getUnreadConversation(...);
   *** setColor(...);
   *** setLargeIcon(...);
   *** setUnreadConversation(...);
}

-keep class android.support.v4.app.NotificationCompat$DecoratedCustomViewStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$DecoratedCustomViewStyle {
   <init>(...);
}

-keep class android.support.v4.app.NotificationCompat$Extender
-keepclassmembers class android.support.v4.app.NotificationCompat$Extender {
}

-keep class android.support.v4.app.NotificationCompat$GroupAlertBehavior
-keepclassmembers class android.support.v4.app.NotificationCompat$GroupAlertBehavior {
}

-keep class android.support.v4.app.NotificationCompat$InboxStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle {
   <init>(...);
   <init>(...);
   *** addLine(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class android.support.v4.app.NotificationCompat$MessagingStyle$Message
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle$Message {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDataMimeType(...);
   *** getDataUri(...);
   *** getExtras(...);
   *** getPerson(...);
   *** getSender(...);
   *** getText(...);
   *** getTimestamp(...);
   *** setData(...);
}

-keep class android.support.v4.app.NotificationCompat$MessagingStyle
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConversationTitle(...);
   *** isGroupConversation(...);
   *** getMessages(...);
   *** getUser(...);
   *** getUserDisplayName(...);
   *** addMessage(...);
   *** addMessage(...);
   *** addMessage(...);
   *** extractMessagingStyleFromNotification(...);
   *** setConversationTitle(...);
   *** setGroupConversation(...);
}

-keep class android.support.v4.app.NotificationCompat$NotificationVisibility
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationVisibility {
}

-keep class android.support.v4.app.NotificationCompat$StreamType
-keepclassmembers class android.support.v4.app.NotificationCompat$StreamType {
}

-keep class android.support.v4.app.NotificationCompat$Style
-keepclassmembers class android.support.v4.app.NotificationCompat$Style {
   <init>(...);
   *** addCompatExtras(...);
   *** apply(...);
   *** applyStandardTemplate(...);
   *** build(...);
   *** buildIntoRemoteViews(...);
   *** createColoredBitmap(...);
   *** makeBigContentView(...);
   *** makeContentView(...);
   *** makeHeadsUpContentView(...);
   *** restoreFromCompatExtras(...);
   *** setBuilder(...);
}

-keep class android.support.v4.app.NotificationCompat$Style
-keepclassmembers class android.support.v4.app.NotificationCompat$Style {
}

-keep class android.support.v4.app.NotificationCompat$WearableExtender
-keepclassmembers class android.support.v4.app.NotificationCompat$WearableExtender {
   <init>(...);
   <init>(...);
   *** getActions(...);
   *** getBackground(...);
   *** getBridgeTag(...);
   *** getContentAction(...);
   *** getContentIcon(...);
   *** getContentIconGravity(...);
   *** getContentIntentAvailableOffline(...);
   *** getCustomContentHeight(...);
   *** getCustomSizePreset(...);
   *** getDismissalId(...);
   *** getDisplayIntent(...);
   *** getGravity(...);
   *** getHintAmbientBigPicture(...);
   *** getHintAvoidBackgroundClipping(...);
   *** getHintContentIntentLaunchesActivity(...);
   *** getHintHideIcon(...);
   *** getHintScreenTimeout(...);
   *** getHintShowBackgroundOnly(...);
   *** getPages(...);
   *** getStartScrollBottom(...);
   *** addAction(...);
   *** addActions(...);
   *** addPage(...);
   *** addPages(...);
   *** clearActions(...);
   *** clearPages(...);
   *** clone(...);
   *** extend(...);
   *** setBackground(...);
   *** setBridgeTag(...);
   *** setContentAction(...);
   *** setContentIcon(...);
   *** setContentIconGravity(...);
   *** setContentIntentAvailableOffline(...);
   *** setCustomContentHeight(...);
   *** setCustomSizePreset(...);
   *** setDismissalId(...);
   *** setDisplayIntent(...);
   *** setGravity(...);
   *** setHintAmbientBigPicture(...);
   *** setHintAvoidBackgroundClipping(...);
   *** setHintContentIntentLaunchesActivity(...);
   *** setHintHideIcon(...);
   *** setHintScreenTimeout(...);
   *** setHintShowBackgroundOnly(...);
   *** setStartScrollBottom(...);
}

-keep class android.support.v4.app.NotificationCompat
-keepclassmembers class android.support.v4.app.NotificationCompat {
   <init>(...);
   *** getAction(...);
   *** getActionCount(...);
   *** getBadgeIconType(...);
   *** getCategory(...);
   *** getChannelId(...);
   *** getContentTitle(...);
   *** getExtras(...);
   *** getGroup(...);
   *** getGroupAlertBehavior(...);
   *** getInvisibleActions(...);
   *** getLocalOnly(...);
   *** getShortcutId(...);
   *** getSortKey(...);
   *** getTimeoutAfter(...);
   *** isGroupSummary(...);
}

-keep class android.support.v4.app.NotificationCompatExtras
-keepclassmembers class android.support.v4.app.NotificationCompatExtras {
}

-keep class android.support.v4.app.NotificationCompatSideChannelService
-keepclassmembers class android.support.v4.app.NotificationCompatSideChannelService {
   <init>(...);
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
   *** onBind(...);
}

-keep class android.support.v4.app.NotificationCompatSideChannelService
-keepclassmembers class android.support.v4.app.NotificationCompatSideChannelService {
   *** cancel(...);
   *** cancelAll(...);
   *** notify(...);
}

-keep class android.support.v4.app.NotificationManagerCompat$Task
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$Task {
}

-keep class android.support.v4.app.NotificationManagerCompat
-keepclassmembers class android.support.v4.app.NotificationManagerCompat {
   *** getImportance(...);
   *** areNotificationsEnabled(...);
   *** cancel(...);
   *** cancel(...);
   *** cancelAll(...);
   *** from(...);
   *** getEnabledListenerPackages(...);
   *** notify(...);
   *** notify(...);
}

-keep class android.support.v4.app.Person$Builder
-keepclassmembers class android.support.v4.app.Person$Builder {
   <init>(...);
   *** build(...);
   *** setBot(...);
   *** setIcon(...);
   *** setImportant(...);
   *** setKey(...);
   *** setName(...);
   *** setUri(...);
}

-keep class android.support.v4.app.Person
-keepclassmembers class android.support.v4.app.Person {
   *** getIcon(...);
   *** isBot(...);
   *** isImportant(...);
   *** getKey(...);
   *** getName(...);
   *** getUri(...);
   *** fromAndroidPerson(...);
   *** fromBundle(...);
   *** toAndroidPerson(...);
   *** toBuilder(...);
   *** toBundle(...);
}

-keep class android.support.v4.app.RemoteInput$Builder
-keepclassmembers class android.support.v4.app.RemoteInput$Builder {
   <init>(...);
   *** getExtras(...);
   *** addExtras(...);
   *** build(...);
   *** setAllowDataType(...);
   *** setAllowFreeFormInput(...);
   *** setChoices(...);
   *** setLabel(...);
}

-keep class android.support.v4.app.RemoteInput
-keepclassmembers class android.support.v4.app.RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getAllowedDataTypes(...);
   *** getExtras(...);
   *** isDataOnly(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** addDataResultToIntent(...);
   *** addResultsToIntent(...);
   *** getChoices(...);
   *** getDataResultsFromIntent(...);
   *** getResultsFromIntent(...);
}

-keep class android.support.v4.app.ServiceCompat$StopForegroundFlags
-keepclassmembers class android.support.v4.app.ServiceCompat$StopForegroundFlags {
}

-keep class android.support.v4.app.ServiceCompat
-keepclassmembers class android.support.v4.app.ServiceCompat {
   *** stopForeground(...);
}

-keep class android.support.v4.app.ShareCompat$IntentBuilder
-keepclassmembers class android.support.v4.app.ShareCompat$IntentBuilder {
   *** getIntent(...);
   *** addEmailBcc(...);
   *** addEmailBcc(...);
   *** addEmailCc(...);
   *** addEmailCc(...);
   *** addEmailTo(...);
   *** addEmailTo(...);
   *** addStream(...);
   *** createChooserIntent(...);
   *** from(...);
   *** setChooserTitle(...);
   *** setChooserTitle(...);
   *** setEmailBcc(...);
   *** setEmailCc(...);
   *** setEmailTo(...);
   *** setHtmlText(...);
   *** setStream(...);
   *** setSubject(...);
   *** setText(...);
   *** setType(...);
   *** startChooser(...);
}

-keep class android.support.v4.app.ShareCompat$IntentReader
-keepclassmembers class android.support.v4.app.ShareCompat$IntentReader {
   *** getCallingActivity(...);
   *** getCallingActivityIcon(...);
   *** getCallingApplicationIcon(...);
   *** getCallingApplicationLabel(...);
   *** getCallingPackage(...);
   *** getHtmlText(...);
   *** isMultipleShare(...);
   *** isShareIntent(...);
   *** isSingleShare(...);
   *** getStream(...);
   *** getStreamCount(...);
   *** getSubject(...);
   *** getText(...);
   *** getType(...);
   *** from(...);
   *** getEmailBcc(...);
   *** getEmailCc(...);
   *** getEmailTo(...);
   *** getStream(...);
}

-keep class android.support.v4.app.ShareCompat
-keepclassmembers class android.support.v4.app.ShareCompat {
   *** configureMenuItem(...);
   *** configureMenuItem(...);
   *** getCallingActivity(...);
   *** getCallingPackage(...);
}

-keep class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class mono.android.support.v4.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor
-keepclassmembers class mono.android.support.v4.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor {
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.SupportActivity$ExtraData
-keepclassmembers class android.support.v4.app.SupportActivity$ExtraData {
   <init>(...);
}

-keep class android.support.v4.app.SupportActivity
-keepclassmembers class android.support.v4.app.SupportActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** superDispatchKeyEvent(...);
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat {
   *** capabilityToString(...);
   *** feedbackTypeToString(...);
   *** flagToString(...);
   *** getCapabilities(...);
   *** loadDescription(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat$Params$Builder
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat$Params$Builder {
   <init>(...);
   *** build(...);
   *** setBreakStrategy(...);
   *** setHyphenationFrequency(...);
   *** setTextDirection(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat$Params
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

-keep class android.support.v4.text.BidiFormatter$Builder
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setTextDirectionHeuristic(...);
   *** stereoReset(...);
}

-keep class android.support.v4.text.BidiFormatter
-keepclassmembers class android.support.v4.text.BidiFormatter {
   *** getInstance(...);
   *** isRtlContext(...);
   *** getStereoReset(...);
   *** getInstance(...);
   *** getInstance(...);
   *** isRtl(...);
   *** isRtl(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
   *** unicodeWrap(...);
}

-keep class android.support.v4.text.HtmlCompat
-keepclassmembers class android.support.v4.text.HtmlCompat {
   *** fromHtml(...);
   *** fromHtml(...);
   *** toHtml(...);
}

-keep class android.support.v4.text.ICUCompat
-keepclassmembers class android.support.v4.text.ICUCompat {
   *** maximizeAndGetScript(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicCompat
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicCompat {
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm {
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl {
   *** defaultIsRtl(...);
   *** isRtl(...);
   *** isRtl(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl {
   *** defaultIsRtl(...);
}

-keep class android.support.v4.text.TextDirectionHeuristicsCompat
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat {
}

-keep class android.support.v4.text.TextUtilsCompat
-keepclassmembers class android.support.v4.text.TextUtilsCompat {
   *** getLayoutDirectionFromLocale(...);
   *** htmlEncode(...);
}

-keep class android.support.v4.text.util.LinkifyCompat$LinkifyMask
-keepclassmembers class android.support.v4.text.util.LinkifyCompat$LinkifyMask {
}

-keep class android.support.v4.text.util.LinkifyCompat
-keepclassmembers class android.support.v4.text.util.LinkifyCompat {
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
   *** addLinks(...);
}

# ACW for Xamarin.Android.Support.CoordinaterLayout
-keep class android.support.v4.widget.DirectedAcyclicGraph
-keepclassmembers class android.support.v4.widget.DirectedAcyclicGraph {
   <init>(...);
   *** getSortedList(...);
   *** addEdge(...);
   *** addNode(...);
   *** clear(...);
   *** contains(...);
   *** getIncomingEdges(...);
   *** getOutgoingEdges(...);
   *** hasOutgoingEdges(...);
}

-keep class android.support.v4.widget.ViewGroupUtils
-keepclassmembers class android.support.v4.widget.ViewGroupUtils {
   *** getDescendantRect(...);
}

-keep class android.support.design.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class android.support.design.widget.CoordinatorLayout$Behavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$Behavior {
}

-keep class android.support.design.widget.CoordinatorLayout$DefaultBehavior
-keepclassmembers class android.support.design.widget.CoordinatorLayout$DefaultBehavior {
}

-keep class android.support.design.widget.CoordinatorLayout$DispatchChangeEvent
-keepclassmembers class android.support.design.widget.CoordinatorLayout$DispatchChangeEvent {
}

-keep class android.support.design.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class android.support.design.widget.CoordinatorLayout$OnPreDrawListener
-keepclassmembers class android.support.design.widget.CoordinatorLayout$OnPreDrawListener {
   *** onPreDraw(...);
}

-keep class android.support.design.widget.CoordinatorLayout$SavedState
-keepclassmembers class android.support.design.widget.CoordinatorLayout$SavedState {
   <init>(...);
   <init>(...);
}

-keep class android.support.design.widget.CoordinatorLayout$ViewElevationComparator
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator {
   *** compare(...);
}

-keep class android.support.design.widget.CoordinatorLayout
-keepclassmembers class android.support.design.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.Android.Support.Core.UI
-keep class android.support.v4.widget.Space
-keepclassmembers class android.support.v4.widget.Space {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v4.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v4.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.Android.Support.Core.Utils
-keep class android.support.v4.content.WakefulBroadcastReceiver
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class android.support.v4.content.WakefulBroadcastReceiver
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.Android.Support.CursorAdapter
-keep class android.support.v4.widget.CursorAdapter
-keepclassmembers class android.support.v4.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class android.support.v4.widget.CursorAdapter
-keepclassmembers class android.support.v4.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class android.support.v4.widget.CursorFilter$CursorFilterClient
-keepclassmembers class android.support.v4.widget.CursorFilter$CursorFilterClient {
}

-keep class android.support.v4.widget.CursorFilter
-keepclassmembers class android.support.v4.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class android.support.v4.widget.ResourceCursorAdapter
-keepclassmembers class android.support.v4.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class android.support.v4.widget.ResourceCursorAdapter
-keepclassmembers class android.support.v4.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class android.support.v4.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class android.support.v4.widget.SimpleCursorAdapter
-keepclassmembers class android.support.v4.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.Android.Support.CustomView
-keep class android.support.v4.widget.ExploreByTouchHelper
-keepclassmembers class android.support.v4.widget.ExploreByTouchHelper {
   <init>(...);
   *** getAccessibilityFocusedVirtualViewId(...);
   *** getFocusedVirtualView(...);
   *** getKeyboardFocusedVirtualViewId(...);
   *** clearKeyboardFocusForVirtualView(...);
   *** dispatchHoverEvent(...);
   *** dispatchKeyEvent(...);
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** invalidateRoot(...);
   *** invalidateVirtualView(...);
   *** invalidateVirtualView(...);
   *** onFocusChanged(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateEventForHost(...);
   *** onPopulateEventForVirtualView(...);
   *** onPopulateNodeForHost(...);
   *** onPopulateNodeForVirtualView(...);
   *** onVirtualViewKeyboardFocusChanged(...);
   *** requestKeyboardFocusForVirtualView(...);
   *** sendEventForVirtualView(...);
}

-keep class android.support.v4.widget.ExploreByTouchHelper
-keepclassmembers class android.support.v4.widget.ExploreByTouchHelper {
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateNodeForVirtualView(...);
}

-keep class android.support.v4.widget.ViewDragHelper$Callback
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback {
   <init>(...);
   *** clampViewPositionHorizontal(...);
   *** clampViewPositionVertical(...);
   *** getOrderedChildIndex(...);
   *** getViewHorizontalDragRange(...);
   *** getViewVerticalDragRange(...);
   *** onEdgeDragStarted(...);
   *** onEdgeLock(...);
   *** onEdgeTouched(...);
   *** onViewCaptured(...);
   *** onViewDragStateChanged(...);
   *** onViewPositionChanged(...);
   *** onViewReleased(...);
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.ViewDragHelper$Callback
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback {
   *** tryCaptureView(...);
}

-keep class android.support.v4.widget.ViewDragHelper
-keepclassmembers class android.support.v4.widget.ViewDragHelper {
   *** getActivePointerId(...);
   *** getCapturedView(...);
   *** getEdgeSize(...);
   *** getMinVelocity(...);
   *** setMinVelocity(...);
   *** getTouchSlop(...);
   *** getViewDragState(...);
   *** abort(...);
   *** canScroll(...);
   *** cancel(...);
   *** captureChildView(...);
   *** checkTouchSlop(...);
   *** checkTouchSlop(...);
   *** continueSettling(...);
   *** create(...);
   *** create(...);
   *** findTopChildUnder(...);
   *** flingCapturedView(...);
   *** isCapturedViewUnder(...);
   *** isEdgeTouched(...);
   *** isEdgeTouched(...);
   *** isPointerDown(...);
   *** isViewUnder(...);
   *** processTouchEvent(...);
   *** setEdgeTrackingEnabled(...);
   *** settleCapturedViewAt(...);
   *** shouldInterceptTouchEvent(...);
   *** smoothSlideViewTo(...);
}

-keep class android.support.v4.view.AbsSavedState
-keepclassmembers class android.support.v4.view.AbsSavedState {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSuperState(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.view.AbsSavedState
-keepclassmembers class android.support.v4.view.AbsSavedState {
}

# ACW for Xamarin.Android.Support.DocumentFile
-keep class android.support.v4.provider.DocumentFile
-keepclassmembers class android.support.v4.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class android.support.v4.provider.DocumentFile
-keepclassmembers class android.support.v4.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.Android.Support.DrawerLayout
-keep class android.support.v4.widget.DrawerLayout$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate {
}

-keep class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate
-keepclassmembers class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate {
}

-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout$SavedState
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout$SimpleDrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$SimpleDrawerListener {
   <init>(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
}

-keep class android.support.v4.widget.DrawerLayout$SimpleDrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$SimpleDrawerListener {
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.Android.Support.Fragment
-keep class android.support.v4.app.FragmentActivity$HostCallbacks
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks {
   <init>(...);
   *** onAttachFragment(...);
   *** onGetHost(...);
}

-keep class android.support.v4.app.FragmentActivity$NonConfigurationInstances
-keepclassmembers class android.support.v4.app.FragmentActivity$NonConfigurationInstances {
}

-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getLifecycle(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** getViewModelStore(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.app.DialogFragment
-keepclassmembers class android.support.v4.app.DialogFragment {
   <init>(...);
   *** isCancelable(...);
   *** setCancelable(...);
   *** getDialog(...);
   *** getShowsDialog(...);
   *** setShowsDialog(...);
   *** getTheme(...);
   *** dismiss(...);
   *** dismissAllowingStateLoss(...);
   *** onCancel(...);
   *** onCreateDialog(...);
   *** onDismiss(...);
   *** setStyle(...);
   *** setupDialog(...);
   *** show(...);
   *** show(...);
   *** showNow(...);
}

-keep class android.support.v4.app.Fragment$AnimationInfo
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo {
}

-keep class android.support.v4.app.Fragment$InstantiationException
-keepclassmembers class android.support.v4.app.Fragment$InstantiationException {
   <init>(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentContainer
-keepclassmembers class android.support.v4.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class android.support.v4.app.FragmentContainer
-keepclassmembers class android.support.v4.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class android.support.v4.app.FragmentController
-keepclassmembers class android.support.v4.app.FragmentController {
   *** getActiveFragmentsCount(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** attachHost(...);
   *** createController(...);
   *** dispatchActivityCreated(...);
   *** dispatchConfigurationChanged(...);
   *** dispatchContextItemSelected(...);
   *** dispatchCreate(...);
   *** dispatchCreateOptionsMenu(...);
   *** dispatchDestroy(...);
   *** dispatchDestroyView(...);
   *** dispatchLowMemory(...);
   *** dispatchMultiWindowModeChanged(...);
   *** dispatchOptionsItemSelected(...);
   *** dispatchOptionsMenuClosed(...);
   *** dispatchPause(...);
   *** dispatchPictureInPictureModeChanged(...);
   *** dispatchPrepareOptionsMenu(...);
   *** dispatchReallyStop(...);
   *** dispatchResume(...);
   *** dispatchStart(...);
   *** dispatchStop(...);
   *** doLoaderDestroy(...);
   *** doLoaderRetain(...);
   *** doLoaderStart(...);
   *** doLoaderStop(...);
   *** dumpLoaders(...);
   *** execPendingActions(...);
   *** findFragmentByWho(...);
   *** getActiveFragments(...);
   *** noteStateNotSaved(...);
   *** onCreateView(...);
   *** reportLoaderStart(...);
   *** restoreAllState(...);
   *** restoreAllState(...);
   *** restoreLoaderNonConfig(...);
   *** retainLoaderNonConfig(...);
   *** retainNestedNonConfig(...);
   *** retainNonConfig(...);
   *** saveAllState(...);
}

-keep class android.support.v4.app.FragmentHostCallback
-keepclassmembers class android.support.v4.app.FragmentHostCallback {
   <init>(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class android.support.v4.app.FragmentHostCallback
-keepclassmembers class android.support.v4.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManagerNonConfig
-keepclassmembers class android.support.v4.app.FragmentManagerNonConfig {
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentStatePagerAdapter
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter {
   <init>(...);
   *** getItem(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentStatePagerAdapter
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentTabHost$DummyTabFactory
-keepclassmembers class android.support.v4.app.FragmentTabHost$DummyTabFactory {
   <init>(...);
   *** createTabContent(...);
}

-keep class android.support.v4.app.FragmentTabHost$SavedState
-keepclassmembers class android.support.v4.app.FragmentTabHost$SavedState {
}

-keep class android.support.v4.app.FragmentTabHost$TabInfo
-keepclassmembers class android.support.v4.app.FragmentTabHost$TabInfo {
}

-keep class android.support.v4.app.FragmentTabHost
-keepclassmembers class android.support.v4.app.FragmentTabHost {
   <init>(...);
   <init>(...);
   *** addTab(...);
   *** onTabChanged(...);
   *** setup(...);
   *** setup(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransitionImpl
-keepclassmembers class android.support.v4.app.FragmentTransitionImpl {
   <init>(...);
   *** addTarget(...);
   *** addTargets(...);
   *** beginDelayedTransition(...);
   *** bfsAddViewChildren(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** getBoundsOnScreen(...);
   *** isNullOrEmpty(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** replaceTargets(...);
   *** scheduleHideFragmentView(...);
   *** scheduleRemoveTargets(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** setSharedElementTargets(...);
   *** swapSharedElementTargets(...);
   *** wrapTransitionInSet(...);
}

-keep class android.support.v4.app.FragmentTransitionImpl
-keepclassmembers class android.support.v4.app.FragmentTransitionImpl {
   *** addTarget(...);
   *** addTargets(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** replaceTargets(...);
   *** scheduleHideFragmentView(...);
   *** scheduleRemoveTargets(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** setSharedElementTargets(...);
   *** swapSharedElementTargets(...);
   *** wrapTransitionInSet(...);
}

-keep class android.support.v4.app.ListFragment
-keepclassmembers class android.support.v4.app.ListFragment {
   <init>(...);
   *** getListAdapter(...);
   *** setListAdapter(...);
   *** getListView(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** onListItemClick(...);
   *** setEmptyText(...);
   *** setListShown(...);
   *** setListShownNoAnimation(...);
   *** setSelection(...);
}

# ACW for Xamarin.Android.Support.Interpolator
-keep class android.support.v4.view.animation.FastOutLinearInInterpolator
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.FastOutSlowInInterpolator
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LookupTableInterpolator
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class android.support.v4.view.animation.LookupTableInterpolator
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.Android.Support.Loader
-keep class android.support.v4.content.AsyncTaskLoader
-keepclassmembers class android.support.v4.content.AsyncTaskLoader {
   <init>(...);
   *** isLoadInBackgroundCanceled(...);
   *** cancelLoadInBackground(...);
   *** loadInBackground(...);
   *** onCanceled(...);
   *** onLoadInBackground(...);
   *** setUpdateThrottle(...);
   *** waitForLoader(...);
}

-keep class android.support.v4.content.AsyncTaskLoader
-keepclassmembers class android.support.v4.content.AsyncTaskLoader {
   *** loadInBackground(...);
}

-keep class android.support.v4.content.CursorLoader
-keepclassmembers class android.support.v4.content.CursorLoader {
   <init>(...);
   <init>(...);
   *** getSelection(...);
   *** setSelection(...);
   *** getSortOrder(...);
   *** setSortOrder(...);
   *** getUri(...);
   *** setUri(...);
   *** deliverResult(...);
   *** getProjection(...);
   *** getSelectionArgs(...);
   *** loadInBackground(...);
   *** onCanceled(...);
   *** setProjection(...);
   *** setSelectionArgs(...);
}

-keep class android.support.v4.content.Loader$ForceLoadContentObserver
-keepclassmembers class android.support.v4.content.Loader$ForceLoadContentObserver {
   <init>(...);
}

-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class mono.android.support.v4.content.Loader_OnLoadCanceledListenerImplementor
-keepclassmembers class mono.android.support.v4.content.Loader_OnLoadCanceledListenerImplementor {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class mono.android.support.v4.content.Loader_OnLoadCompleteListenerImplementor
-keepclassmembers class mono.android.support.v4.content.Loader_OnLoadCompleteListenerImplementor {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.Android.Support.LocalBroadcastManager
-keep class android.support.v4.content.LocalBroadcastManager
-keepclassmembers class android.support.v4.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.Android.Support.Media.Compat
-keep class androidx.media.AudioAttributesCompatParcelizer
-keepclassmembers class androidx.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class androidx.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
}

-keep class android.support.v4.media.AudioAttributesCompat$AttributeContentType
-keepclassmembers class android.support.v4.media.AudioAttributesCompat$AttributeContentType {
}

-keep class android.support.v4.media.AudioAttributesCompat$AttributeUsage
-keepclassmembers class android.support.v4.media.AudioAttributesCompat$AttributeUsage {
}

-keep class android.support.v4.media.AudioAttributesCompat$AudioManagerHidden
-keepclassmembers class android.support.v4.media.AudioAttributesCompat$AudioManagerHidden {
}

-keep class android.support.v4.media.AudioAttributesCompat$AudioManagerHidden
-keepclassmembers class android.support.v4.media.AudioAttributesCompat$AudioManagerHidden {
}

-keep class android.support.v4.media.AudioAttributesCompat$Builder
-keepclassmembers class android.support.v4.media.AudioAttributesCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setContentType(...);
   *** setFlags(...);
   *** setLegacyStreamType(...);
   *** setUsage(...);
}

-keep class android.support.v4.media.AudioAttributesCompat
-keepclassmembers class android.support.v4.media.AudioAttributesCompat {
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
   *** fromBundle(...);
   *** setForceLegacyBehavior(...);
   *** toBundle(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CallbackHandler
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CallbackHandler {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
   <init>(...);
   *** onError(...);
   *** onProgressUpdate(...);
   *** onResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
   <init>(...);
   *** onError(...);
   *** onItemLoaded(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** onConnectionFailed(...);
   *** onLoadChildren(...);
   *** onServiceConnected(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem$Flags {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem {
   <init>(...);
   *** getDescription(...);
   *** getFlags(...);
   *** isBrowsable(...);
   *** isPlayable(...);
   *** getMediaId(...);
   *** describeContents(...);
   *** fromMediaItem(...);
   *** fromMediaItemList(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
   <init>(...);
   *** onError(...);
   *** onSearchResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper {
   <init>(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
   <init>(...);
   *** onChildrenLoaded(...);
   *** onChildrenLoaded(...);
   *** onError(...);
   *** onError(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat
-keepclassmembers class android.support.v4.media.MediaBrowserCompat {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** subscribe(...);
   *** unsubscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaBrowserCompatUtils
-keepclassmembers class android.support.v4.media.MediaBrowserCompatUtils {
   *** areSameOptions(...);
   *** hasDuplicatedItems(...);
}

-keep class android.support.v4.media.MediaBrowserProtocol
-keepclassmembers class android.support.v4.media.MediaBrowserProtocol {
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot {
   <init>(...);
   *** getExtras(...);
   *** getRootId(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl {
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase {
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCreate(...);
   *** setSessionToken(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$Result
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$Result {
   *** detach(...);
   *** sendError(...);
   *** sendProgressUpdate(...);
   *** sendResult(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks {
}

-keep class android.support.v4.media.MediaBrowserServiceCompat
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat {
   <init>(...);
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** getSessionToken(...);
   *** setSessionToken(...);
   *** attachToBaseContext(...);
   *** dump(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCustomAction(...);
   *** onGetRoot(...);
   *** onLoadChildren(...);
   *** onLoadChildren(...);
   *** onLoadItem(...);
   *** onSearch(...);
   *** onSubscribe(...);
   *** onUnsubscribe(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat {
   *** onGetRoot(...);
   *** onLoadChildren(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$BitmapKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$BitmapKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$Builder
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** putBitmap(...);
   *** putLong(...);
   *** putRating(...);
   *** putString(...);
   *** putText(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$LongKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$LongKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$RatingKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$RatingKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$TextKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$TextKey {
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaSessionManager$MediaSessionManagerImpl
-keepclassmembers class android.support.v4.media.MediaSessionManager$MediaSessionManagerImpl {
}

-keep class android.support.v4.media.MediaSessionManager$RemoteUserInfo
-keepclassmembers class android.support.v4.media.MediaSessionManager$RemoteUserInfo {
   <init>(...);
   <init>(...);
   *** getPackageName(...);
   *** getPid(...);
   *** getUid(...);
}

-keep class android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl
-keepclassmembers class android.support.v4.media.MediaSessionManager$RemoteUserInfoImpl {
}

-keep class android.support.v4.media.MediaSessionManager
-keepclassmembers class android.support.v4.media.MediaSessionManager {
   *** getSessionManager(...);
   *** isTrustedForMediaControl(...);
}

-keep class android.support.v4.media.RatingCompat$StarStyle
-keepclassmembers class android.support.v4.media.RatingCompat$StarStyle {
}

-keep class android.support.v4.media.RatingCompat$Style
-keepclassmembers class android.support.v4.media.RatingCompat$Style {
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$ControlType
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$ControlType {
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCommand(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCommand(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaButtonReceiver
-keepclassmembers class android.support.v4.media.session.MediaButtonReceiver {
   <init>(...);
   *** buildMediaButtonPendingIntent(...);
   *** buildMediaButtonPendingIntent(...);
   *** getMediaButtonReceiverComponent(...);
   *** handleIntent(...);
   *** onReceive(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** getIControllerCallback(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onCaptioningEnabledChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl {
}

-keep class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase {
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackInfo(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSessionActivity(...);
   *** getShuffleMode(...);
   *** getTransportControls(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** sendCommand(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControlsBase {
   <init>(...);
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSessionActivity(...);
   *** getSessionToken(...);
   *** getSessionToken2Bundle(...);
   *** getShuffleMode(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getMediaController(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** sendCommand(...);
   *** setMediaController(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onPrepare(...);
   *** onPrepareFromMediaId(...);
   *** onPrepareFromSearch(...);
   *** onPrepareFromUri(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetCaptioningEnabled(...);
   *** onSetRating(...);
   *** onSetRating(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl {
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub {
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCommand(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler {
   <init>(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase {
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getCurrentControllerInfo(...);
   *** setCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getPlaybackState(...);
   *** setPlaybackState(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** release(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** fromQueueItem(...);
   *** fromQueueItemList(...);
   *** getQueueItem(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$SessionFlags
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$SessionFlags {
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** getExtraBinder(...);
   *** setExtraBinder(...);
   *** getSessionToken2Bundle(...);
   *** setSessionToken2Bundle(...);
   *** describeContents(...);
   *** fromBundle(...);
   *** fromToken(...);
   *** fromToken(...);
   *** getToken(...);
   *** toBundle(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getController(...);
   *** getCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** ensureClassLoader(...);
   *** fromMediaSession(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Actions
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Actions {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Builder {
   <init>(...);
   <init>(...);
   *** addCustomAction(...);
   *** addCustomAction(...);
   *** build(...);
   *** setActions(...);
   *** setActiveQueueItemId(...);
   *** setBufferedPosition(...);
   *** setErrorMessage(...);
   *** setErrorMessage(...);
   *** setExtras(...);
   *** setState(...);
   *** setState(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setExtras(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ErrorCode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ErrorCode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$RepeatMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$RepeatMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$State
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$State {
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** getCurrentPosition(...);
   *** toKeyCode(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
-keepclassmembers class android.support.v4.media.app.NotificationCompat$DecoratedMediaCustomViewStyle {
   <init>(...);
}

-keep class android.support.v4.media.app.NotificationCompat$MediaStyle
-keepclassmembers class android.support.v4.media.app.NotificationCompat$MediaStyle {
   <init>(...);
   <init>(...);
   *** getMediaSession(...);
   *** setCancelButtonIntent(...);
   *** setMediaSession(...);
   *** setShowActionsInCompactView(...);
   *** setShowCancelButton(...);
}

-keep class android.support.v4.media.app.NotificationCompat
-keepclassmembers class android.support.v4.media.app.NotificationCompat {
}

# ACW for Xamarin.Android.Support.Print
-keep class android.support.v4.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class android.support.v4.print.PrintHelper$OnPrintFinishCallback {
}

-keep class android.support.v4.print.PrintHelper
-keepclassmembers class android.support.v4.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.Android.Support.SlidingPaneLayout
-keep class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate {
   *** filter(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.android.support.v4.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class android.support.v4.widget.SlidingPaneLayout$SavedState
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$SavedState {
}

-keep class android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class android.support.v4.widget.SlidingPaneLayout
-keepclassmembers class android.support.v4.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** closePane(...);
   *** onLayout(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.Android.Support.SwipeRefreshLayout
-keep class android.support.v4.widget.CircularProgressDrawable$ProgressDrawableSize
-keepclassmembers class android.support.v4.widget.CircularProgressDrawable$ProgressDrawableSize {
}

-keep class android.support.v4.widget.CircularProgressDrawable
-keepclassmembers class android.support.v4.widget.CircularProgressDrawable {
   <init>(...);
   *** getArrowEnabled(...);
   *** setArrowEnabled(...);
   *** getArrowHeight(...);
   *** getArrowScale(...);
   *** setArrowScale(...);
   *** getArrowWidth(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getCenterRadius(...);
   *** setCenterRadius(...);
   *** getEndTrim(...);
   *** isRunning(...);
   *** getOpacity(...);
   *** getProgressRotation(...);
   *** setProgressRotation(...);
   *** getStartTrim(...);
   *** getStrokeCap(...);
   *** setStrokeCap(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** draw(...);
   *** getColorSchemeColors(...);
   *** setAlpha(...);
   *** setArrowDimensions(...);
   *** setColorFilter(...);
   *** setColorSchemeColors(...);
   *** setStartEndTrim(...);
   *** setStyle(...);
   *** start(...);
   *** stop(...);
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class android.support.v4.widget.SwipeRefreshLayout
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.Android.Support.v4
# ACW for Xamarin.Android.Support.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.Android.Support.ViewPager
-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.view.PagerTabStrip
-keepclassmembers class android.support.v4.view.PagerTabStrip {
   <init>(...);
   <init>(...);
   *** getDrawFullUnderline(...);
   *** setDrawFullUnderline(...);
   *** getTabIndicatorColor(...);
   *** setTabIndicatorColor(...);
   *** setTabIndicatorColorResource(...);
}

-keep class android.support.v4.view.PagerTitleStrip
-keepclassmembers class android.support.v4.view.PagerTitleStrip {
   <init>(...);
   <init>(...);
   *** getTextSpacing(...);
   *** setTextSpacing(...);
   *** onLayout(...);
   *** setGravity(...);
   *** setNonPrimaryAlpha(...);
   *** setTextColor(...);
   *** setTextSize(...);
}

-keep class android.support.v4.view.ViewPager$DecorView
-keepclassmembers class android.support.v4.view.ViewPager$DecorView {
}

-keep class android.support.v4.view.ViewPager$ItemInfo
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo {
}

-keep class android.support.v4.view.ViewPager$LayoutParams
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams {
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.view.ViewPager$MyAccessibilityDelegate
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate {
}

-keep class android.support.v4.view.ViewPager$OnAdapterChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnAdapterChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$OnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnPageChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$PageTransformer
-keepclassmembers class android.support.v4.view.ViewPager$PageTransformer {
}

-keep class android.support.v4.view.ViewPager$SavedState
-keepclassmembers class android.support.v4.view.ViewPager$SavedState {
   <init>(...);
}

-keep class android.support.v4.view.ViewPager$SimpleOnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$SimpleOnPageChangeListener {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class android.support.v4.view.ViewPager$ViewPositionComparator
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator {
   *** compare(...);
}

-keep class android.support.v4.view.ViewPager
-keepclassmembers class android.support.v4.view.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.Annotation
-keep class androidx.annotation.AnimatorRes
-keepclassmembers class androidx.annotation.AnimatorRes {
}

-keep class androidx.annotation.AnimRes
-keepclassmembers class androidx.annotation.AnimRes {
}

-keep class androidx.annotation.AnyRes
-keepclassmembers class androidx.annotation.AnyRes {
}

-keep class androidx.annotation.AnyThread
-keepclassmembers class androidx.annotation.AnyThread {
}

-keep class androidx.annotation.ArrayRes
-keepclassmembers class androidx.annotation.ArrayRes {
}

-keep class androidx.annotation.AttrRes
-keepclassmembers class androidx.annotation.AttrRes {
}

-keep class androidx.annotation.BinderThread
-keepclassmembers class androidx.annotation.BinderThread {
}

-keep class androidx.annotation.BoolRes
-keepclassmembers class androidx.annotation.BoolRes {
}

-keep class androidx.annotation.CallSuper
-keepclassmembers class androidx.annotation.CallSuper {
}

-keep class androidx.annotation.CheckResult
-keepclassmembers class androidx.annotation.CheckResult {
}

-keep class androidx.annotation.ColorInt
-keepclassmembers class androidx.annotation.ColorInt {
}

-keep class androidx.annotation.ColorLong
-keepclassmembers class androidx.annotation.ColorLong {
}

-keep class androidx.annotation.ColorRes
-keepclassmembers class androidx.annotation.ColorRes {
}

-keep class androidx.annotation.ContentView
-keepclassmembers class androidx.annotation.ContentView {
}

-keep class androidx.annotation.DimenRes
-keepclassmembers class androidx.annotation.DimenRes {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.DrawableRes
-keepclassmembers class androidx.annotation.DrawableRes {
}

-keep class androidx.annotation.FloatRange
-keepclassmembers class androidx.annotation.FloatRange {
}

-keep class androidx.annotation.FontRes
-keepclassmembers class androidx.annotation.FontRes {
}

-keep class androidx.annotation.FractionRes
-keepclassmembers class androidx.annotation.FractionRes {
}

-keep class androidx.annotation.GuardedBy
-keepclassmembers class androidx.annotation.GuardedBy {
}

-keep class androidx.annotation.HalfFloat
-keepclassmembers class androidx.annotation.HalfFloat {
}

-keep class androidx.annotation.IdRes
-keepclassmembers class androidx.annotation.IdRes {
}

-keep class androidx.annotation.InspectableProperty$EnumEntry
-keepclassmembers class androidx.annotation.InspectableProperty$EnumEntry {
}

-keep class androidx.annotation.InspectableProperty$FlagEntry
-keepclassmembers class androidx.annotation.InspectableProperty$FlagEntry {
}

-keep class androidx.annotation.InspectableProperty$ValueType
-keepclassmembers class androidx.annotation.InspectableProperty$ValueType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.InspectableProperty
-keepclassmembers class androidx.annotation.InspectableProperty {
}

-keep class androidx.annotation.IntDef
-keepclassmembers class androidx.annotation.IntDef {
}

-keep class androidx.annotation.IntegerRes
-keepclassmembers class androidx.annotation.IntegerRes {
}

-keep class androidx.annotation.InterpolatorRes
-keepclassmembers class androidx.annotation.InterpolatorRes {
}

-keep class androidx.annotation.IntRange
-keepclassmembers class androidx.annotation.IntRange {
}

-keep class androidx.annotation.Keep
-keepclassmembers class androidx.annotation.Keep {
}

-keep class androidx.annotation.LayoutRes
-keepclassmembers class androidx.annotation.LayoutRes {
}

-keep class androidx.annotation.LongDef
-keepclassmembers class androidx.annotation.LongDef {
}

-keep class androidx.annotation.MainThread
-keepclassmembers class androidx.annotation.MainThread {
}

-keep class androidx.annotation.MenuRes
-keepclassmembers class androidx.annotation.MenuRes {
}

-keep class androidx.annotation.NavigationRes
-keepclassmembers class androidx.annotation.NavigationRes {
}

-keep class androidx.annotation.NonNull
-keepclassmembers class androidx.annotation.NonNull {
}

-keep class androidx.annotation.Nullable
-keepclassmembers class androidx.annotation.Nullable {
}

-keep class androidx.annotation.PluralsRes
-keepclassmembers class androidx.annotation.PluralsRes {
}

-keep class androidx.annotation.Px
-keepclassmembers class androidx.annotation.Px {
}

-keep class androidx.annotation.RawRes
-keepclassmembers class androidx.annotation.RawRes {
}

-keep class androidx.annotation.RequiresApi
-keepclassmembers class androidx.annotation.RequiresApi {
}

-keep class androidx.annotation.RequiresFeature
-keepclassmembers class androidx.annotation.RequiresFeature {
}

-keep class androidx.annotation.RequiresPermission$Read
-keepclassmembers class androidx.annotation.RequiresPermission$Read {
}

-keep class androidx.annotation.RequiresPermission$Write
-keepclassmembers class androidx.annotation.RequiresPermission$Write {
}

-keep class androidx.annotation.RequiresPermission
-keepclassmembers class androidx.annotation.RequiresPermission {
}

-keep class androidx.annotation.RestrictTo$Scope
-keepclassmembers class androidx.annotation.RestrictTo$Scope {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RestrictTo
-keepclassmembers class androidx.annotation.RestrictTo {
}

-keep class androidx.annotation.Size
-keepclassmembers class androidx.annotation.Size {
}

-keep class androidx.annotation.StringDef
-keepclassmembers class androidx.annotation.StringDef {
}

-keep class androidx.annotation.StringRes
-keepclassmembers class androidx.annotation.StringRes {
}

-keep class androidx.annotation.StyleableRes
-keepclassmembers class androidx.annotation.StyleableRes {
}

-keep class androidx.annotation.StyleRes
-keepclassmembers class androidx.annotation.StyleRes {
}

-keep class androidx.annotation.TransitionRes
-keepclassmembers class androidx.annotation.TransitionRes {
}

-keep class androidx.annotation.UiThread
-keepclassmembers class androidx.annotation.UiThread {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.WorkerThread
-keepclassmembers class androidx.annotation.WorkerThread {
}

-keep class androidx.annotation.XmlRes
-keepclassmembers class androidx.annotation.XmlRes {
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView$ItemView
-keepclassmembers class androidx.appcompat.view.menu.MenuView$ItemView {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
-keep class androidx.arch.core.util.Function
-keepclassmembers class androidx.arch.core.util.Function {
}

-keep class androidx.arch.core.internal.FastSafeIterableMap
-keepclassmembers class androidx.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** newest(...);
   *** put(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Runtime
-keep class androidx.arch.core.executor.ArchTaskExecutor
-keepclassmembers class androidx.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class androidx.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class androidx.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.AndroidX.AsyncLayoutInflater
-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener {
}

-keep class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor
-keepclassmembers class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor {
}

-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** extraCallback(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   *** extraCallback(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class android.support.customtabs.ICustomTabsCallback
-keepclassmembers class android.support.customtabs.ICustomTabsCallback {
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** postMessage(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** postMessage(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService
-keepclassmembers class android.support.customtabs.ICustomTabsService {
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService
-keepclassmembers class android.support.customtabs.IPostMessageService {
}

-keep class androidx.browser.browseractions.BrowserActionItem
-keepclassmembers class androidx.browser.browseractions.BrowserActionItem {
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getIconId(...);
   *** getTitle(...);
}

-keep class androidx.browser.browseractions.BrowserActionsFallbackMenuView
-keepclassmembers class androidx.browser.browseractions.BrowserActionsFallbackMenuView {
   <init>(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$Builder
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$Builder {
   <init>(...);
   *** build(...);
   *** setCustomItems(...);
   *** setCustomItems(...);
   *** setOnItemSelectedAction(...);
   *** setUrlType(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent {
   *** getIntent(...);
   *** getCreatorPackageName(...);
   *** launchIntent(...);
   *** openBrowserAction(...);
   *** openBrowserAction(...);
   *** parseBrowserActionItems(...);
}

-keep class androidx.browser.customtabs.CustomTabsClient
-keepclassmembers class androidx.browser.customtabs.CustomTabsClient {
   *** bindCustomTabsService(...);
   *** connectAndInitialize(...);
   *** extraCommand(...);
   *** getPackageName(...);
   *** getPackageName(...);
   *** newSession(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsCallback
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback {
   <init>(...);
   *** extraCallback(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setCloseButtonIcon(...);
   *** setExitAnimations(...);
   *** setInstantAppsEnabled(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarViews(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsService$Relation
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Relation {
}

-keep class androidx.browser.customtabs.CustomTabsService$Result
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Result {
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   <init>(...);
   *** cleanUpSession(...);
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** onBind(...);
   *** postMessage(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** postMessage(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   <init>(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

-keep class androidx.browser.customtabs.CustomTabsSessionToken
-keepclassmembers class androidx.browser.customtabs.CustomTabsSessionToken {
   *** getCallback(...);
   *** createMockSessionTokenForTesting(...);
   *** getSessionTokenFromIntent(...);
   *** isAssociatedWith(...);
}

-keep class androidx.browser.customtabs.PostMessageService
-keepclassmembers class androidx.browser.customtabs.PostMessageService {
   <init>(...);
   *** onBind(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
   <init>(...);
   *** bindSessionToPostMessageService(...);
   *** notifyMessageChannelReady(...);
   *** onPostMessageServiceConnected(...);
   *** onPostMessageServiceDisconnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
   *** postMessage(...);
   *** unbindFromContext(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
}

-keep class androidx.browser.customtabs.TrustedWebUtils
-keepclassmembers class androidx.browser.customtabs.TrustedWebUtils {
   *** launchAsTrustedWebActivity(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.ArrayMap
-keepclassmembers class androidx.collection.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class androidx.collection.ArraySet
-keepclassmembers class androidx.collection.ArraySet {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** ensureCapacity(...);
   *** indexOf(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAt(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
   *** valueAt(...);
}

-keep class androidx.collection.CircularArray
-keepclassmembers class androidx.collection.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.CircularIntArray
-keepclassmembers class androidx.collection.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.LongSparseArray
-keepclassmembers class androidx.collection.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.LruCache
-keepclassmembers class androidx.collection.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class androidx.collection.SimpleArrayMap
-keepclassmembers class androidx.collection.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** getOrDefault(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.AutoSizeableTextView
-keepclassmembers class androidx.core.widget.AutoSizeableTextView {
}

-keep class androidx.core.widget.TintableCompoundButton
-keepclassmembers class androidx.core.widget.TintableCompoundButton {
}

-keep class androidx.core.widget.TintableImageSourceView
-keepclassmembers class androidx.core.widget.TintableImageSourceView {
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** onNestedScrollAccepted(...);
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.NestedScrollingChild
-keepclassmembers class androidx.core.view.NestedScrollingChild {
}

-keep class androidx.core.view.NestedScrollingChild2
-keepclassmembers class androidx.core.view.NestedScrollingChild2 {
}

-keep class androidx.core.view.NestedScrollingChild3
-keepclassmembers class androidx.core.view.NestedScrollingChild3 {
}

-keep class androidx.core.view.NestedScrollingParent
-keepclassmembers class androidx.core.view.NestedScrollingParent {
}

-keep class androidx.core.view.NestedScrollingParent2
-keepclassmembers class androidx.core.view.NestedScrollingParent2 {
}

-keep class androidx.core.view.NestedScrollingParent3
-keepclassmembers class androidx.core.view.NestedScrollingParent3 {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.TintableBackgroundView
-keepclassmembers class androidx.core.view.TintableBackgroundView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.KeyEventDispatcher$Component
-keepclassmembers class androidx.core.view.KeyEventDispatcher$Component {
}

-keep class androidx.core.view.KeyEventDispatcher
-keepclassmembers class androidx.core.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.internal.view.SupportMenu
-keepclassmembers class androidx.core.internal.view.SupportMenu {
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.NotificationBuilderWithBuilderAccessor
-keepclassmembers class androidx.core.app.NotificationBuilderWithBuilderAccessor {
}

-keep class androidx.core.app.NotificationCompat$Action
-keepclassmembers class androidx.core.app.NotificationCompat$Action {
   <init>(...);
   <init>(...);
   *** getActionIntent(...);
   *** getAllowGeneratedReplies(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getSemanticAction(...);
   *** getShowsUserInterface(...);
   *** getTitle(...);
   *** getDataOnlyRemoteInputs(...);
   *** getRemoteInputs(...);
}

-keep class androidx.core.app.NotificationCompat$Builder
-keepclassmembers class androidx.core.app.NotificationCompat$Builder {
   <init>(...);
   <init>(...);
   *** getBigContentView(...);
   *** getColor(...);
   *** getContentView(...);
   *** getExtras(...);
   *** getHeadsUpContentView(...);
   *** getNotification(...);
   *** getPriority(...);
   *** getWhenIfShowing(...);
   *** addAction(...);
   *** addAction(...);
   *** addExtras(...);
   *** addInvisibleAction(...);
   *** addInvisibleAction(...);
   *** addPerson(...);
   *** build(...);
   *** extend(...);
   *** limitCharSequenceLength(...);
   *** setAutoCancel(...);
   *** setBadgeIconType(...);
   *** setCategory(...);
   *** setChannelId(...);
   *** setColor(...);
   *** setColorized(...);
   *** setContent(...);
   *** setContentInfo(...);
   *** setContentIntent(...);
   *** setContentText(...);
   *** setContentTitle(...);
   *** setCustomBigContentView(...);
   *** setCustomContentView(...);
   *** setCustomHeadsUpContentView(...);
   *** setDefaults(...);
   *** setDeleteIntent(...);
   *** setExtras(...);
   *** setFullScreenIntent(...);
   *** setGroup(...);
   *** setGroupAlertBehavior(...);
   *** setGroupSummary(...);
   *** setLargeIcon(...);
   *** setLights(...);
   *** setLocalOnly(...);
   *** setNumber(...);
   *** setOngoing(...);
   *** setOnlyAlertOnce(...);
   *** setPriority(...);
   *** setProgress(...);
   *** setPublicVersion(...);
   *** setRemoteInputHistory(...);
   *** setShortcutId(...);
   *** setShowWhen(...);
   *** setSmallIcon(...);
   *** setSmallIcon(...);
   *** setSortKey(...);
   *** setSound(...);
   *** setSound(...);
   *** setStyle(...);
   *** setSubText(...);
   *** setTicker(...);
   *** setTicker(...);
   *** setTimeoutAfter(...);
   *** setUsesChronometer(...);
   *** setVibrate(...);
   *** setVisibility(...);
   *** setWhen(...);
}

-keep class androidx.core.app.NotificationCompat$Extender
-keepclassmembers class androidx.core.app.NotificationCompat$Extender {
}

-keep class androidx.core.app.NotificationCompat$Style
-keepclassmembers class androidx.core.app.NotificationCompat$Style {
   <init>(...);
   *** addCompatExtras(...);
   *** apply(...);
   *** applyStandardTemplate(...);
   *** build(...);
   *** buildIntoRemoteViews(...);
   *** createColoredBitmap(...);
   *** makeBigContentView(...);
   *** makeContentView(...);
   *** makeHeadsUpContentView(...);
   *** restoreFromCompatExtras(...);
   *** setBuilder(...);
}

-keep class androidx.core.app.NotificationCompat$Style
-keepclassmembers class androidx.core.app.NotificationCompat$Style {
}

-keep class androidx.core.app.NotificationCompat
-keepclassmembers class androidx.core.app.NotificationCompat {
   <init>(...);
   *** getAction(...);
   *** getActionCount(...);
   *** getBadgeIconType(...);
   *** getCategory(...);
   *** getChannelId(...);
   *** getContentTitle(...);
   *** getExtras(...);
   *** getGroup(...);
   *** getGroupAlertBehavior(...);
   *** getInvisibleActions(...);
   *** getLocalOnly(...);
   *** getShortcutId(...);
   *** getSortKey(...);
   *** getTimeoutAfter(...);
   *** isGroupSummary(...);
}

-keep class androidx.core.app.RemoteInput
-keepclassmembers class androidx.core.app.RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getAllowedDataTypes(...);
   *** getExtras(...);
   *** isDataOnly(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** addDataResultToIntent(...);
   *** addResultsToIntent(...);
   *** getChoices(...);
   *** getDataResultsFromIntent(...);
   *** getResultsFromIntent(...);
   *** getResultsSource(...);
   *** setResultsSource(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder$SupportParentable
-keepclassmembers class androidx.core.app.TaskStackBuilder$SupportParentable {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class androidx.cursoradapter.widget.CursorFilter
-keepclassmembers class androidx.cursoradapter.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.ExploreByTouchHelper
-keepclassmembers class androidx.customview.widget.ExploreByTouchHelper {
   <init>(...);
   *** getAccessibilityFocusedVirtualViewId(...);
   *** getFocusedVirtualView(...);
   *** getKeyboardFocusedVirtualViewId(...);
   *** clearKeyboardFocusForVirtualView(...);
   *** dispatchHoverEvent(...);
   *** dispatchKeyEvent(...);
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** invalidateRoot(...);
   *** invalidateVirtualView(...);
   *** invalidateVirtualView(...);
   *** onFocusChanged(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateEventForHost(...);
   *** onPopulateEventForVirtualView(...);
   *** onPopulateNodeForHost(...);
   *** onPopulateNodeForVirtualView(...);
   *** onVirtualViewKeyboardFocusChanged(...);
   *** requestKeyboardFocusForVirtualView(...);
   *** sendEventForVirtualView(...);
}

-keep class androidx.customview.widget.ExploreByTouchHelper
-keepclassmembers class androidx.customview.widget.ExploreByTouchHelper {
   *** getVirtualViewAt(...);
   *** getVisibleVirtualViews(...);
   *** onPerformActionForVirtualView(...);
   *** onPopulateNodeForVirtualView(...);
}

-keep class androidx.customview.widget.ViewDragHelper$Callback
-keepclassmembers class androidx.customview.widget.ViewDragHelper$Callback {
   <init>(...);
   *** clampViewPositionHorizontal(...);
   *** clampViewPositionVertical(...);
   *** getOrderedChildIndex(...);
   *** getViewHorizontalDragRange(...);
   *** getViewVerticalDragRange(...);
   *** onEdgeDragStarted(...);
   *** onEdgeLock(...);
   *** onEdgeTouched(...);
   *** onViewCaptured(...);
   *** onViewDragStateChanged(...);
   *** onViewPositionChanged(...);
   *** onViewReleased(...);
   *** tryCaptureView(...);
}

-keep class androidx.customview.widget.ViewDragHelper$Callback
-keepclassmembers class androidx.customview.widget.ViewDragHelper$Callback {
   *** tryCaptureView(...);
}

-keep class androidx.customview.widget.ViewDragHelper
-keepclassmembers class androidx.customview.widget.ViewDragHelper {
   *** getActivePointerId(...);
   *** getCapturedView(...);
   *** getEdgeSize(...);
   *** getMinVelocity(...);
   *** setMinVelocity(...);
   *** getTouchSlop(...);
   *** getViewDragState(...);
   *** abort(...);
   *** canScroll(...);
   *** cancel(...);
   *** captureChildView(...);
   *** checkTouchSlop(...);
   *** checkTouchSlop(...);
   *** continueSettling(...);
   *** create(...);
   *** create(...);
   *** findTopChildUnder(...);
   *** flingCapturedView(...);
   *** isCapturedViewUnder(...);
   *** isEdgeTouched(...);
   *** isEdgeTouched(...);
   *** isPointerDown(...);
   *** isViewUnder(...);
   *** processTouchEvent(...);
   *** setEdgeTrackingEnabled(...);
   *** settleCapturedViewAt(...);
   *** shouldInterceptTouchEvent(...);
   *** smoothSlideViewTo(...);
}

-keep class androidx.customview.view.AbsSavedState
-keepclassmembers class androidx.customview.view.AbsSavedState {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSuperState(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.customview.view.AbsSavedState
-keepclassmembers class androidx.customview.view.AbsSavedState {
}

# ACW for Xamarin.AndroidX.DocumentFile
-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   <init>(...);
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

# ACW for Xamarin.AndroidX.Interpolator
-keep class androidx.interpolator.view.animation.FastOutLinearInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.FastOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.UI
-keep class androidx.legacy.app.ActionBarDrawerToggle
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.V4
# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData
-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   <init>(...);
   <init>(...);
   *** getLiveData(...);
   *** compute(...);
   *** invalidate(...);
}

-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   *** compute(...);
}

-keep class androidx.lifecycle.MediatorLiveData
-keepclassmembers class androidx.lifecycle.MediatorLiveData {
   <init>(...);
   *** addSource(...);
   *** removeSource(...);
}

-keep class androidx.lifecycle.Transformations
-keepclassmembers class androidx.lifecycle.Transformations {
   *** distinctUntilChanged(...);
   *** map(...);
   *** switchMap(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Runtime
-keep class androidx.lifecycle.LifecycleRegistry
-keepclassmembers class androidx.lifecycle.LifecycleRegistry {
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
   *** setCurrentState(...);
}

-keep class androidx.lifecycle.ReportFragment
-keepclassmembers class androidx.lifecycle.ReportFragment {
   <init>(...);
   *** injectIfNeededIn(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
-keep class androidx.localbroadcastmanager.content.LocalBroadcastManager
-keepclassmembers class androidx.localbroadcastmanager.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.AndroidX.Media
-keep class androidx.media.AudioAttributesCompat$AttributeContentType
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeContentType {
}

-keep class androidx.media.AudioAttributesCompat$AttributeUsage
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeUsage {
}

-keep class androidx.media.AudioAttributesCompat$Builder
-keepclassmembers class androidx.media.AudioAttributesCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setContentType(...);
   *** setFlags(...);
   *** setLegacyStreamType(...);
   *** setUsage(...);
}

-keep class androidx.media.AudioAttributesCompat
-keepclassmembers class androidx.media.AudioAttributesCompat {
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
   *** setForceLegacyBehavior(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.media.AudioAttributesCompatParcelizer
-keepclassmembers class androidx.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioAttributesImplBase
-keepclassmembers class androidx.media.AudioAttributesImplBase {
   *** getAudioAttributes(...);
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getRawLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
}

-keep class androidx.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class androidx.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioFocusRequestCompat$Builder
-keepclassmembers class androidx.media.AudioFocusRequestCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAudioAttributes(...);
   *** setFocusGain(...);
   *** setOnAudioFocusChangeListener(...);
   *** setOnAudioFocusChangeListener(...);
   *** setWillPauseWhenDucked(...);
}

-keep class androidx.media.AudioFocusRequestCompat$FocusGainType
-keepclassmembers class androidx.media.AudioFocusRequestCompat$FocusGainType {
}

-keep class androidx.media.AudioFocusRequestCompat
-keepclassmembers class androidx.media.AudioFocusRequestCompat {
   *** getAudioAttributesCompat(...);
   *** getFocusChangeHandler(...);
   *** getFocusGain(...);
   *** getOnAudioFocusChangeListener(...);
   *** willPauseWhenDucked(...);
}

-keep class androidx.media.AudioManagerCompat
-keepclassmembers class androidx.media.AudioManagerCompat {
   *** abandonAudioFocusRequest(...);
   *** requestAudioFocus(...);
}

-keep class androidx.media.MediaBrowserCompatUtils
-keepclassmembers class androidx.media.MediaBrowserCompatUtils {
   *** areSameOptions(...);
   *** hasDuplicatedItems(...);
}

-keep class androidx.media.MediaBrowserProtocol
-keepclassmembers class androidx.media.MediaBrowserProtocol {
}

-keep class androidx.media.MediaBrowserServiceCompat$BrowserRoot
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$BrowserRoot {
   <init>(...);
   *** getExtras(...);
   *** getRootId(...);
}

-keep class androidx.media.MediaBrowserServiceCompat$Result
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$Result {
   *** detach(...);
   *** sendError(...);
   *** sendProgressUpdate(...);
   *** sendResult(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   <init>(...);
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** getSessionToken(...);
   *** setSessionToken(...);
   *** attachToBaseContext(...);
   *** dump(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCustomAction(...);
   *** onGetRoot(...);
   *** onLoadChildren(...);
   *** onLoadChildren(...);
   *** onLoadItem(...);
   *** onSearch(...);
   *** onSubscribe(...);
   *** onUnsubscribe(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   *** onGetRoot(...);
   *** onLoadChildren(...);
}

-keep class androidx.media.MediaSessionManager$RemoteUserInfo
-keepclassmembers class androidx.media.MediaSessionManager$RemoteUserInfo {
   <init>(...);
   <init>(...);
   *** getPackageName(...);
   *** getPid(...);
   *** getUid(...);
}

-keep class androidx.media.MediaSessionManager
-keepclassmembers class androidx.media.MediaSessionManager {
   *** getSessionManager(...);
   *** isTrustedForMediaControl(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$ControlType
-keepclassmembers class androidx.media.VolumeProviderCompat$ControlType {
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
}

-keep class androidx.media.session.MediaButtonReceiver
-keepclassmembers class androidx.media.session.MediaButtonReceiver {
   <init>(...);
   *** buildMediaButtonPendingIntent(...);
   *** buildMediaButtonPendingIntent(...);
   *** getMediaButtonReceiverComponent(...);
   *** handleIntent(...);
   *** onReceive(...);
}

-keep class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
-keepclassmembers class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle {
   <init>(...);
}

-keep class androidx.media.app.NotificationCompat$MediaStyle
-keepclassmembers class androidx.media.app.NotificationCompat$MediaStyle {
   <init>(...);
   <init>(...);
   *** getMediaSession(...);
   *** setCancelButtonIntent(...);
   *** setMediaSession(...);
   *** setShowActionsInCompactView(...);
   *** setShowCancelButton(...);
}

-keep class androidx.media.app.NotificationCompat
-keepclassmembers class androidx.media.app.NotificationCompat {
}

-keep class android.support.v4.media.AudioAttributesCompatParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CallbackHandler
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CallbackHandler {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
   <init>(...);
   *** onError(...);
   *** onProgressUpdate(...);
   *** onResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
   <init>(...);
   *** onError(...);
   *** onItemLoaded(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem$Flags {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem {
   <init>(...);
   *** getDescription(...);
   *** getFlags(...);
   *** isBrowsable(...);
   *** isPlayable(...);
   *** getMediaId(...);
   *** describeContents(...);
   *** fromMediaItem(...);
   *** fromMediaItemList(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
   <init>(...);
   *** onError(...);
   *** onSearchResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper {
   <init>(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
   <init>(...);
   *** onChildrenLoaded(...);
   *** onChildrenLoaded(...);
   *** onError(...);
   *** onError(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat
-keepclassmembers class android.support.v4.media.MediaBrowserCompat {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** subscribe(...);
   *** unsubscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$BitmapKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$BitmapKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$Builder
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** putBitmap(...);
   *** putLong(...);
   *** putRating(...);
   *** putString(...);
   *** putText(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$LongKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$LongKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$RatingKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$RatingKey {
}

-keep class android.support.v4.media.MediaMetadataCompat$TextKey
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$TextKey {
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.RatingCompat$StarStyle
-keepclassmembers class android.support.v4.media.RatingCompat$StarStyle {
}

-keep class android.support.v4.media.RatingCompat$Style
-keepclassmembers class android.support.v4.media.RatingCompat$Style {
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCommand(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCommand(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** getIControllerCallback(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onCaptioningEnabledChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioAttributes(...);
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setPlaybackSpeed(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSession2Token(...);
   *** getSessionActivity(...);
   *** getSessionInfo(...);
   *** getSessionToken(...);
   *** getShuffleMode(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getMediaController(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** sendCommand(...);
   *** setMediaController(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onPrepare(...);
   *** onPrepareFromMediaId(...);
   *** onPrepareFromSearch(...);
   *** onPrepareFromUri(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetCaptioningEnabled(...);
   *** onSetPlaybackSpeed(...);
   *** onSetRating(...);
   *** onSetRating(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** fromQueueItem(...);
   *** fromQueueItemList(...);
   *** getQueueItem(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$SessionFlags
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$SessionFlags {
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** getExtraBinder(...);
   *** setExtraBinder(...);
   *** getSession2Token(...);
   *** setSession2Token(...);
   *** describeContents(...);
   *** fromBundle(...);
   *** fromToken(...);
   *** fromToken(...);
   *** getToken(...);
   *** toBundle(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getController(...);
   *** getCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** ensureClassLoader(...);
   *** fromMediaSession(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Actions
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Actions {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Builder {
   <init>(...);
   <init>(...);
   *** addCustomAction(...);
   *** addCustomAction(...);
   *** build(...);
   *** setActions(...);
   *** setActiveQueueItemId(...);
   *** setBufferedPosition(...);
   *** setErrorMessage(...);
   *** setErrorMessage(...);
   *** setExtras(...);
   *** setState(...);
   *** setState(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setExtras(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ErrorCode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ErrorCode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$RepeatMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$RepeatMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$State
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$State {
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** getCurrentPosition(...);
   *** toKeyCode(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.AndroidX.MultiDex
# ACW for Xamarin.AndroidX.Print
-keep class androidx.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class androidx.print.PrintHelper$OnPrintFinishCallback {
}

-keep class androidx.print.PrintHelper
-keepclassmembers class androidx.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** closePane(...);
   *** onLayout(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationPresenter
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** inflateMenu(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
}

-keep class androidx.activity.OnBackPressedDispatcherOwner
-keepclassmembers class androidx.activity.OnBackPressedDispatcherOwner {
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistryOwner
-keepclassmembers class androidx.savedstate.SavedStateRegistryOwner {
}

-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
# ACW for меньше 3.Android
